from types import TracebackType
from typing import Any, Self

from multidict import CIMultiDict

from pyreqwest.bytes import Bytes


class Response:
    async def __aenter__(self) -> Self: ...
    async def __aexit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> None: ...

    @property
    def status_code(self) -> int: ...
    @property
    def headers(self) -> CIMultiDict[str]: ...
    @property
    def http_version(self) -> str: ...
    @property
    def extensions(self) -> dict[str, Any]: ...

    async def next_chunk(self) -> Bytes | None: ...
    async def read(self) -> Bytes: ...
    async def close(self) -> None: ...
