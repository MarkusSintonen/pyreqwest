from typing import Any


class HTTPError(Exception):
    def __init__(self, message: str, details: dict[str, Any] | None = None) -> None:
        assert isinstance(message, str) and isinstance(details, dict | None)
        super().__init__(message, details)
        self.message = message
        self.details = details

class RequestError(HTTPError): ...
class TransportError(RequestError): ...
class DecodeError(RequestError): ...
class RedirectError(RequestError): ...
class StatusError(RequestError): ...

class RequestTimeoutError(TransportError, TimeoutError): ...
class NetworkError(TransportError): ...

class ConnectTimeoutError(RequestTimeoutError): ...
class ReadTimeoutError(RequestTimeoutError): ...
class WriteTimeoutError(RequestTimeoutError): ...
class PoolTimeoutError(RequestTimeoutError): ...

class ConnectError(NetworkError): ...
class ReadError(NetworkError): ...
class WriteError(NetworkError): ...
class CloseError(NetworkError): ...

class BuilderError(HTTPError, ValueError): ...
