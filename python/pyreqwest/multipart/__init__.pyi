from pathlib import Path
from typing import Self

from pyreqwest.types import HeadersType, Stream

class Form:
    def __init__(self) -> None: ...
    @property
    def boundary(self) -> str: ...
    def text(self, name: str, value: str) -> Self: ...
    async def file(self, name: str, path: Path) -> Self: ...
    def part(self, name: str, part: Part) -> Self: ...
    def percent_encode_path_segment(self) -> Self: ...
    def percent_encode_attr_chars(self) -> Self: ...
    def percent_encode_noop(self) -> Self: ...

class Part:
    @staticmethod
    def from_text(value: str) -> Part: ...
    @staticmethod
    def from_bytes(value: bytes) -> Part: ...
    @staticmethod
    def from_stream(async_gen: Stream) -> Part: ...
    @staticmethod
    def from_stream_with_length(async_gen: Stream, length: int) -> Part: ...
    @staticmethod
    async def from_file(path: Path) -> Part: ...
    def mime_str(self, mime: str) -> Self: ...
    def file_name(self, filename: str) -> Self: ...
    def headers(self, headers: HeadersType) -> Self: ...
