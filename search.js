window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pyreqwest.client.types": {"fullname": "pyreqwest.client.types", "modulename": "pyreqwest.client.types", "kind": "module", "doc": "<p>Types for pyreqwest client module.</p>\n"}, "pyreqwest.client.types.JsonDumpsContext": {"fullname": "pyreqwest.client.types.JsonDumpsContext", "modulename": "pyreqwest.client.types", "qualname": "JsonDumpsContext", "kind": "class", "doc": "<p>Data for json serializing.</p>\n", "bases": "typing.Protocol"}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"fullname": "pyreqwest.client.types.JsonDumpsContext.__init__", "modulename": "pyreqwest.client.types", "qualname": "JsonDumpsContext.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pyreqwest.client.types.JsonDumpsContext.data": {"fullname": "pyreqwest.client.types.JsonDumpsContext.data", "modulename": "pyreqwest.client.types", "qualname": "JsonDumpsContext.data", "kind": "variable", "doc": "<p>The data to be serialized to JSON.</p>\n", "annotation": ": Any"}, "pyreqwest.client.types.JsonLoadsContext": {"fullname": "pyreqwest.client.types.JsonLoadsContext", "modulename": "pyreqwest.client.types", "qualname": "JsonLoadsContext", "kind": "class", "doc": "<p>Data for json deserializing.</p>\n", "bases": "typing.Protocol"}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"fullname": "pyreqwest.client.types.JsonLoadsContext.__init__", "modulename": "pyreqwest.client.types", "qualname": "JsonLoadsContext.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"fullname": "pyreqwest.client.types.JsonLoadsContext.body_reader", "modulename": "pyreqwest.client.types", "qualname": "JsonLoadsContext.body_reader", "kind": "variable", "doc": "<p>The body reader to read the JSON data from.</p>\n", "annotation": ": pyreqwest.response.ResponseBodyReader"}, "pyreqwest.client.types.JsonLoadsContext.headers": {"fullname": "pyreqwest.client.types.JsonLoadsContext.headers", "modulename": "pyreqwest.client.types", "qualname": "JsonLoadsContext.headers", "kind": "variable", "doc": "<p>The response headers.</p>\n", "annotation": ": pyreqwest.http.HeaderMap"}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"fullname": "pyreqwest.client.types.JsonLoadsContext.extensions", "modulename": "pyreqwest.client.types", "qualname": "JsonLoadsContext.extensions", "kind": "variable", "doc": "<p>The extensions associated with the request.</p>\n", "annotation": ": dict[str, typing.Any]"}, "pyreqwest.client.types.SyncJsonLoadsContext": {"fullname": "pyreqwest.client.types.SyncJsonLoadsContext", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoadsContext", "kind": "class", "doc": "<p>Data for sync json deserializing.</p>\n", "bases": "typing.Protocol"}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"fullname": "pyreqwest.client.types.SyncJsonLoadsContext.__init__", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoadsContext.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"fullname": "pyreqwest.client.types.SyncJsonLoadsContext.body_reader", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoadsContext.body_reader", "kind": "variable", "doc": "<p>The body reader to read the JSON data from.</p>\n", "annotation": ": pyreqwest.response.SyncResponseBodyReader"}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"fullname": "pyreqwest.client.types.SyncJsonLoadsContext.headers", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoadsContext.headers", "kind": "variable", "doc": "<p>The response headers.</p>\n", "annotation": ": pyreqwest.http.HeaderMap"}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"fullname": "pyreqwest.client.types.SyncJsonLoadsContext.extensions", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoadsContext.extensions", "kind": "variable", "doc": "<p>The extensions associated with the request.</p>\n", "annotation": ": dict[str, typing.Any]"}, "pyreqwest.client.types.JsonDumps": {"fullname": "pyreqwest.client.types.JsonDumps", "modulename": "pyreqwest.client.types", "qualname": "JsonDumps", "kind": "variable", "doc": "<p></p>\n", "default_value": "collections.abc.Callable[[pyreqwest.client.types.JsonDumpsContext], bytes | bytearray | memoryview]"}, "pyreqwest.client.types.JsonLoads": {"fullname": "pyreqwest.client.types.JsonLoads", "modulename": "pyreqwest.client.types", "qualname": "JsonLoads", "kind": "variable", "doc": "<p></p>\n", "default_value": "collections.abc.Callable[[pyreqwest.client.types.JsonLoadsContext], collections.abc.Awaitable[typing.Any]]"}, "pyreqwest.client.types.SyncJsonLoads": {"fullname": "pyreqwest.client.types.SyncJsonLoads", "modulename": "pyreqwest.client.types", "qualname": "SyncJsonLoads", "kind": "variable", "doc": "<p></p>\n", "default_value": "collections.abc.Callable[[pyreqwest.client.types.SyncJsonLoadsContext], typing.Any]"}, "pyreqwest.client.types.TlsVersion": {"fullname": "pyreqwest.client.types.TlsVersion", "modulename": "pyreqwest.client.types", "qualname": "TlsVersion", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Literal[&#x27;TLSv1.0&#x27;, &#x27;TLSv1.1&#x27;, &#x27;TLSv1.2&#x27;, &#x27;TLSv1.3&#x27;]"}, "pyreqwest": {"fullname": "pyreqwest", "modulename": "pyreqwest", "kind": "module", "doc": "<p align=\"center\">\n    <img width=\"250\" alt=\"logo2\" src=\"https://github.com/user-attachments/assets/d93f91bd-5f2e-4fbc-80be-1b3344433853\" />\n</p>\n\n<p align=\"center\">\n    <em>Python HTTP client fully in Rust</em>\n</p>\n\n<hr />\n\n<p>pyreqwest - Powerful and fast Rust based HTTP client. Built on top of and inspired by <a href=\"https://github.com/seanmonstar/reqwest\">reqwest</a>.</p>\n\n<h2 id=\"why\">Why</h2>\n\n<ul>\n<li>No reinvention of the wheel - built on top of battle-tested reqwest and other Rust HTTP crates</li>\n<li>Secure and fast - no C-extension code, no Python code or dependencies, no <code>unsafe</code> code</li>\n<li>Ergonomic and easy to use - similar API as in reqwest, fully type-annotated</li>\n<li>Testing ergonomics - mocking included, ability to connect into ASGI apps</li>\n</ul>\n\n<p>Using this is a good choice when:</p>\n\n<ul>\n<li>You care about throughput and latency</li>\n<li>You want a single solution to serve all your HTTP client needs</li>\n</ul>\n\n<p>This is not a good choice when:</p>\n\n<ul>\n<li>You want a pure Python solution allowing debugging of the HTTP client internals</li>\n<li>You use alternative Python implementations or Python version older than 3.11</li>\n</ul>\n\n<h2 id=\"feature-rich\">Feature-rich</h2>\n\n<ul>\n<li>High performance</li>\n<li>Asynchronous and synchronous HTTP clients</li>\n<li>Customizable via middlewares and custom JSON serializers</li>\n<li>Ergonomic as <code>reqwest</code></li>\n<li>HTTP/1.1 and HTTP/2 support (also HTTP/3 when it <a href=\"https://docs.rs/reqwest/latest/reqwest/#unstable-features\">stabilizes</a>)</li>\n<li>Mocking and testing utilities (can also connect to ASGI apps)</li>\n<li>Fully type-safe with Python type hints</li>\n<li>Full test coverage</li>\n<li>Free threading</li>\n</ul>\n\n<h3 id=\"standard-http-features-you-would-expect\">Standard HTTP features you would expect</h3>\n\n<ul>\n<li>HTTPS support (using <a href=\"https://github.com/rustls/rustls\">rustls</a>)</li>\n<li>Request and response body streaming</li>\n<li>Connection pooling</li>\n<li>JSON, URLs, Headers, Cookies etc. (all serializers in Rust)</li>\n<li>Automatic decompression (zstd, gzip, brotli, deflate)</li>\n<li>Automatic response decoding (charset detection)</li>\n<li>Multipart form support</li>\n<li>Proxy support</li>\n<li>Redirects</li>\n<li>Timeouts</li>\n<li>Authentication (Basic, Bearer)</li>\n<li>Cookie management</li>\n</ul>\n\n<h2 id=\"quickstart\">Quickstart</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># uv add pyreqwest</span>\n\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pyreqwest.client</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">ClientBuilder</span><span class=\"p\">,</span> <span class=\"n\">SyncClientBuilder</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">example_async</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientBuilder</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">error_for_status</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://httpbun.com/get&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">({</span><span class=\"s2\">&quot;q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;val&quot;</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">())</span>        \n\n<span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">example_sync</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">SyncClientBuilder</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">error_for_status</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://httpbun.com/get&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">({</span><span class=\"s2\">&quot;q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;val&quot;</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">())</span>\n</code></pre>\n</div>\n\n<p>Context manager usage is optional, but recommended. Also <code>close()</code> methods are available.</p>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p>See <a href=\"https://markussintonen.github.io/pyreqwest/pyreqwest.html\">docs</a></p>\n\n<p>See <a href=\"https://github.com/MarkusSintonen/pyreqwest/tree/main/examples\">examples</a></p>\n"}, "pyreqwest.bytes": {"fullname": "pyreqwest.bytes", "modulename": "pyreqwest.bytes", "kind": "module", "doc": "<p>Buffer protocol implementation.</p>\n"}, "pyreqwest.bytes.Bytes": {"fullname": "pyreqwest.bytes.Bytes", "modulename": "pyreqwest.bytes", "qualname": "Bytes", "kind": "class", "doc": "<p>A <code>bytes</code>-like buffer.</p>\n\n<p>This implements the Python buffer protocol, allowing zero-copy access\nto underlying Rust memory.</p>\n\n<p>You can pass this to <code>memoryview</code> for a zero-copy view into the underlying\ndata or to <code>bytes</code> to copy the underlying data into a Python <code>bytes</code>.\nYou can also use <code>to_bytes</code> to copy the underlying data into a Python <code>bytes</code>.</p>\n\n<p>Many methods from the Python <code>bytes</code> class are implemented on this,</p>\n"}, "pyreqwest.bytes.Bytes.__init__": {"fullname": "pyreqwest.bytes.Bytes.__init__", "modulename": "pyreqwest.bytes", "qualname": "Bytes.__init__", "kind": "function", "doc": "<p>Construct a new Bytes object.</p>\n\n<p>This will be a zero-copy view on the Python byte slice.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">buf</span><span class=\"p\">:</span> <span class=\"n\">Buffer</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;&#39;</span></span>)</span>"}, "pyreqwest.bytes.Bytes.removeprefix": {"fullname": "pyreqwest.bytes.Bytes.removeprefix", "modulename": "pyreqwest.bytes", "qualname": "Bytes.removeprefix", "kind": "function", "doc": "<p>If the binary data starts with the prefix string, return <code>bytes[len(prefix):]</code>.\nOtherwise, return the original binary data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"n\">Buffer</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.removesuffix": {"fullname": "pyreqwest.bytes.Bytes.removesuffix", "modulename": "pyreqwest.bytes", "qualname": "Bytes.removesuffix", "kind": "function", "doc": "<p>If the binary data ends with the suffix string and that suffix is not empty,\nreturn <code>bytes[:-len(suffix)]</code>. Otherwise, return the original binary data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"n\">Buffer</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isalnum": {"fullname": "pyreqwest.bytes.Bytes.isalnum", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isalnum", "kind": "function", "doc": "<p>Return <code>True</code> if all bytes in the sequence are alphabetical ASCII characters or\nASCII decimal digits and the sequence is not empty, <code>False</code> otherwise.</p>\n\n<p>Alphabetic ASCII characters are those byte values in the sequence\n<code>b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</code>. ASCII decimal digits\nare those byte values in the sequence <code>b'0123456789'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isalpha": {"fullname": "pyreqwest.bytes.Bytes.isalpha", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isalpha", "kind": "function", "doc": "<p>Return <code>True</code> if all bytes in the sequence are alphabetic ASCII characters and\nthe sequence is not empty, <code>False</code> otherwise.</p>\n\n<p>Alphabetic ASCII characters are those byte values in the sequence\n<code>b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isascii": {"fullname": "pyreqwest.bytes.Bytes.isascii", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isascii", "kind": "function", "doc": "<p>Return <code>True</code> if the sequence is empty or all bytes in the sequence are ASCII,\n<code>False</code> otherwise.</p>\n\n<p>ASCII bytes are in the range <code>0-0x7F</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isdigit": {"fullname": "pyreqwest.bytes.Bytes.isdigit", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isdigit", "kind": "function", "doc": "<p>Return <code>True</code> if all bytes in the sequence are ASCII decimal digits and the\nsequence is not empty, <code>False</code> otherwise.</p>\n\n<p>ASCII decimal digits are those byte values in the sequence <code>b'0123456789'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.islower": {"fullname": "pyreqwest.bytes.Bytes.islower", "modulename": "pyreqwest.bytes", "qualname": "Bytes.islower", "kind": "function", "doc": "<p>Return <code>True</code> if there is at least one lowercase ASCII character in the sequence\nand no uppercase ASCII characters, <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isspace": {"fullname": "pyreqwest.bytes.Bytes.isspace", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isspace", "kind": "function", "doc": "<p>Return <code>True</code> if all bytes in the sequence are ASCII whitespace and the sequence\nis not empty, <code>False</code> otherwise.</p>\n\n<p>ASCII whitespace characters are those byte values\nin the sequence <code>b' \\t\\n\\r\\x0b\\f'</code> (space, tab, newline, carriage return,\nvertical tab, form feed).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.isupper": {"fullname": "pyreqwest.bytes.Bytes.isupper", "modulename": "pyreqwest.bytes", "qualname": "Bytes.isupper", "kind": "function", "doc": "<p>Return <code>True</code> if there is at least one uppercase alphabetic ASCII character in\nthe sequence and no lowercase ASCII characters, <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.lower": {"fullname": "pyreqwest.bytes.Bytes.lower", "modulename": "pyreqwest.bytes", "qualname": "Bytes.lower", "kind": "function", "doc": "<p>Return a copy of the sequence with all the uppercase ASCII characters converted\nto their corresponding lowercase counterpart.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.upper": {"fullname": "pyreqwest.bytes.Bytes.upper", "modulename": "pyreqwest.bytes", "qualname": "Bytes.upper", "kind": "function", "doc": "<p>Return a copy of the sequence with all the lowercase ASCII characters converted\nto their corresponding uppercase counterpart.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.bytes.Bytes.to_bytes": {"fullname": "pyreqwest.bytes.Bytes.to_bytes", "modulename": "pyreqwest.bytes", "qualname": "Bytes.to_bytes", "kind": "function", "doc": "<p>Copy this buffer's contents into a Python <code>bytes</code> object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client": {"fullname": "pyreqwest.client", "modulename": "pyreqwest.client", "kind": "module", "doc": "<p>HTTP client interfaces (async + sync) modeled after Rust reqwest.</p>\n\n<p><code>Client</code>/<code>SyncClient</code> is created via <code>ClientBuilder</code>/<code>SyncClientBuilder</code>.\nClient should be reused for multiple requests.</p>\n"}, "pyreqwest.client.Client": {"fullname": "pyreqwest.client.Client", "modulename": "pyreqwest.client", "qualname": "Client", "kind": "class", "doc": "<p>Asynchronous HTTP client. Inspired by reqwest's Client.</p>\n\n<p>Use as an async context manager for graceful shutdown. Can be also manually closed. Reuse for multiple requests.\nSee also Rust reqwest <a href=\"https://docs.rs/reqwest/latest/reqwest/struct.Client.html\">docs</a> for more details.</p>\n", "bases": "BaseClient"}, "pyreqwest.client.Client.request": {"fullname": "pyreqwest.client.Client.request", "modulename": "pyreqwest.client", "qualname": "Client.request", "kind": "function", "doc": "<p>Start building a request with the method and url.</p>\n\n<p>Returns a request builder, which will allow setting headers and the request body before sending.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.get": {"fullname": "pyreqwest.client.Client.get", "modulename": "pyreqwest.client", "qualname": "Client.get", "kind": "function", "doc": "<p>Same as <code>request(\"GET\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.post": {"fullname": "pyreqwest.client.Client.post", "modulename": "pyreqwest.client", "qualname": "Client.post", "kind": "function", "doc": "<p>Same as <code>request(\"POST\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.put": {"fullname": "pyreqwest.client.Client.put", "modulename": "pyreqwest.client", "qualname": "Client.put", "kind": "function", "doc": "<p>Same as <code>request(\"PUT\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.patch": {"fullname": "pyreqwest.client.Client.patch", "modulename": "pyreqwest.client", "qualname": "Client.patch", "kind": "function", "doc": "<p>Same as <code>request(\"PATCH\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.delete": {"fullname": "pyreqwest.client.Client.delete", "modulename": "pyreqwest.client", "qualname": "Client.delete", "kind": "function", "doc": "<p>Same as <code>request(\"DELETE\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.head": {"fullname": "pyreqwest.client.Client.head", "modulename": "pyreqwest.client", "qualname": "Client.head", "kind": "function", "doc": "<p>Same as <code>request(\"HEAD\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Client.__aenter__": {"fullname": "pyreqwest.client.Client.__aenter__", "modulename": "pyreqwest.client", "qualname": "Client.__aenter__", "kind": "function", "doc": "<p>Enter the async context manager (just returns self). @public</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.client.Client.__aexit__": {"fullname": "pyreqwest.client.Client.__aexit__", "modulename": "pyreqwest.client", "qualname": "Client.__aexit__", "kind": "function", "doc": "<p>Close the client. @public</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.client.Client.close": {"fullname": "pyreqwest.client.Client.close", "modulename": "pyreqwest.client", "qualname": "Client.close", "kind": "function", "doc": "<p>Close the client.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.client.ClientBuilder": {"fullname": "pyreqwest.client.ClientBuilder", "modulename": "pyreqwest.client", "qualname": "ClientBuilder", "kind": "class", "doc": "<p>Fluent builder for configuring an async <code>Client</code>.</p>\n\n<p>After configuring options, call <code>build()</code> to obtain a <code>Client</code>.\nSee also Rust reqwest <a href=\"https://docs.rs/reqwest/latest/reqwest/struct.ClientBuilder.html\">docs</a> for more details.</p>\n", "bases": "BaseClientBuilder"}, "pyreqwest.client.ClientBuilder.__init__": {"fullname": "pyreqwest.client.ClientBuilder.__init__", "modulename": "pyreqwest.client", "qualname": "ClientBuilder.__init__", "kind": "function", "doc": "<p>Create a new builder with default settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.client.ClientBuilder.build": {"fullname": "pyreqwest.client.ClientBuilder.build", "modulename": "pyreqwest.client", "qualname": "ClientBuilder.build", "kind": "function", "doc": "<p>Finalize and construct the async client.</p>\n\n<p>Fails if a TLS backend cannot be initialized, or the resolver cannot load the system configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.ClientBuilder.with_middleware": {"fullname": "pyreqwest.client.ClientBuilder.with_middleware", "modulename": "pyreqwest.client", "qualname": "ClientBuilder.with_middleware", "kind": "function", "doc": "<p>Register a middleware component (executed in chain order).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">middleware</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">middleware</span><span class=\"o\">.</span><span class=\"n\">Next</span><span class=\"p\">],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.ClientBuilder.json_handler": {"fullname": "pyreqwest.client.ClientBuilder.json_handler", "modulename": "pyreqwest.client", "qualname": "ClientBuilder.json_handler", "kind": "function", "doc": "<p>Override JSON loads / dumps callables for this client.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">loads</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">JsonLoadsContext</span><span class=\"p\">],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"bp\">Ellipsis</span>,</span><span class=\"param\">\t<span class=\"n\">dumps</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">JsonDumpsContext</span><span class=\"p\">],</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient": {"fullname": "pyreqwest.client.SyncClient", "modulename": "pyreqwest.client", "qualname": "SyncClient", "kind": "class", "doc": "<p>Synchronous HTTP client. Inspired by reqwest's Client.</p>\n\n<p>Use as a context manager for graceful shutdown. Can be also manually closed. Reuse for multiple requests.\nSee also Rust reqwest <a href=\"https://docs.rs/reqwest/latest/reqwest/struct.Client.html\">docs</a> for more details.</p>\n", "bases": "BaseClient"}, "pyreqwest.client.SyncClient.request": {"fullname": "pyreqwest.client.SyncClient.request", "modulename": "pyreqwest.client", "qualname": "SyncClient.request", "kind": "function", "doc": "<p>Start building a request with the method and url.</p>\n\n<p>Returns a request builder, which will allow setting headers and the request body before sending.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.get": {"fullname": "pyreqwest.client.SyncClient.get", "modulename": "pyreqwest.client", "qualname": "SyncClient.get", "kind": "function", "doc": "<p>Same as <code>request(\"GET\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.post": {"fullname": "pyreqwest.client.SyncClient.post", "modulename": "pyreqwest.client", "qualname": "SyncClient.post", "kind": "function", "doc": "<p>Same as <code>request(\"POST\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.put": {"fullname": "pyreqwest.client.SyncClient.put", "modulename": "pyreqwest.client", "qualname": "SyncClient.put", "kind": "function", "doc": "<p>Same as <code>request(\"PUT\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.patch": {"fullname": "pyreqwest.client.SyncClient.patch", "modulename": "pyreqwest.client", "qualname": "SyncClient.patch", "kind": "function", "doc": "<p>Same as <code>request(\"PATCH\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.delete": {"fullname": "pyreqwest.client.SyncClient.delete", "modulename": "pyreqwest.client", "qualname": "SyncClient.delete", "kind": "function", "doc": "<p>Same as <code>request(\"DELETE\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.head": {"fullname": "pyreqwest.client.SyncClient.head", "modulename": "pyreqwest.client", "qualname": "SyncClient.head", "kind": "function", "doc": "<p>Same as <code>request(\"HEAD\", url)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncRequestBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.__enter__": {"fullname": "pyreqwest.client.SyncClient.__enter__", "modulename": "pyreqwest.client", "qualname": "SyncClient.__enter__", "kind": "function", "doc": "<p>Enter the context manager (just returns self). @public</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.__exit__": {"fullname": "pyreqwest.client.SyncClient.__exit__", "modulename": "pyreqwest.client", "qualname": "SyncClient.__exit__", "kind": "function", "doc": "<p>Exit the context manager and close resources. @public</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClient.close": {"fullname": "pyreqwest.client.SyncClient.close", "modulename": "pyreqwest.client", "qualname": "SyncClient.close", "kind": "function", "doc": "<p>Close the client.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClientBuilder": {"fullname": "pyreqwest.client.SyncClientBuilder", "modulename": "pyreqwest.client", "qualname": "SyncClientBuilder", "kind": "class", "doc": "<p>Fluent builder for configuring a synchronous <code>SyncClient</code> (blocking style).</p>\n\n<p>After configuring options, call <code>build()</code> to obtain a <code>Client</code>.\nSee also Rust reqwest <a href=\"https://docs.rs/reqwest/latest/reqwest/struct.ClientBuilder.html\">docs</a> for more details.</p>\n", "bases": "BaseClientBuilder"}, "pyreqwest.client.SyncClientBuilder.__init__": {"fullname": "pyreqwest.client.SyncClientBuilder.__init__", "modulename": "pyreqwest.client", "qualname": "SyncClientBuilder.__init__", "kind": "function", "doc": "<p>Create a new builder with default settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.client.SyncClientBuilder.build": {"fullname": "pyreqwest.client.SyncClientBuilder.build", "modulename": "pyreqwest.client", "qualname": "SyncClientBuilder.build", "kind": "function", "doc": "<p>Finalize and construct the sync client.</p>\n\n<p>Fails if a TLS backend cannot be initialized, or the resolver cannot load the system configuration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">SyncClient</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"fullname": "pyreqwest.client.SyncClientBuilder.with_middleware", "modulename": "pyreqwest.client", "qualname": "SyncClientBuilder.with_middleware", "kind": "function", "doc": "<p>Register a middleware component (executed in chain order).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">middleware</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">middleware</span><span class=\"o\">.</span><span class=\"n\">SyncNext</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">SyncResponse</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.SyncClientBuilder.json_handler": {"fullname": "pyreqwest.client.SyncClientBuilder.json_handler", "modulename": "pyreqwest.client", "qualname": "SyncClientBuilder.json_handler", "kind": "function", "doc": "<p>Override JSON loads / dumps callables for this sync client.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">loads</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SyncJsonLoadsContext</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"bp\">Ellipsis</span>,</span><span class=\"param\">\t<span class=\"n\">dumps</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">JsonDumpsContext</span><span class=\"p\">],</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClient": {"fullname": "pyreqwest.client.BaseClient", "modulename": "pyreqwest.client", "qualname": "BaseClient", "kind": "class", "doc": "<p>Common base for async and sync clients.</p>\n"}, "pyreqwest.client.BaseClientBuilder": {"fullname": "pyreqwest.client.BaseClientBuilder", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder", "kind": "class", "doc": "<p></p>\n"}, "pyreqwest.client.BaseClientBuilder.base_url": {"fullname": "pyreqwest.client.BaseClientBuilder.base_url", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.base_url", "kind": "function", "doc": "<p>Set a base URL automatically prepended to relative request URLs.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.runtime": {"fullname": "pyreqwest.client.BaseClientBuilder.runtime", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.runtime", "kind": "function", "doc": "<p>Use a custom runtime (advanced scenarios). Usually not needed. By default, a global runtime is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">runtime</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Runtime</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.max_connections": {"fullname": "pyreqwest.client.BaseClientBuilder.max_connections", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.max_connections", "kind": "function", "doc": "<p>Maximum number of inflight requests. None means no limit. Default is None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_connections</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"fullname": "pyreqwest.client.BaseClientBuilder.error_for_status", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.error_for_status", "kind": "function", "doc": "<p>Enable automatic HTTP error raising (4xx/5xx).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.user_agent": {"fullname": "pyreqwest.client.BaseClientBuilder.user_agent", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.user_agent", "kind": "function", "doc": "<p>Sets the User-Agent header to be used by this client (unless overridden).\nDefault is <code>python-pyreqwest/1.0.0</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.default_headers": {"fullname": "pyreqwest.client.BaseClientBuilder.default_headers", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.default_headers", "kind": "function", "doc": "<p>Sets the default headers for every request (unless overridden).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"fullname": "pyreqwest.client.BaseClientBuilder.default_cookie_store", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.default_cookie_store", "kind": "function", "doc": "<p>Enables default in-memory cookie store. Same as <code>cookie_store</code> in reqwest. Default is false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"fullname": "pyreqwest.client.BaseClientBuilder.cookie_provider", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.cookie_provider", "kind": "function", "doc": "<p>Set the cookie store for the client. Overrides <code>default_cookie_store</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">CookieStore</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.gzip": {"fullname": "pyreqwest.client.BaseClientBuilder.gzip", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.gzip", "kind": "function", "doc": "<p>Enable auto gzip decompression. Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.brotli": {"fullname": "pyreqwest.client.BaseClientBuilder.brotli", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.brotli", "kind": "function", "doc": "<p>Enable auto brotli decompression. Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.zstd": {"fullname": "pyreqwest.client.BaseClientBuilder.zstd", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.zstd", "kind": "function", "doc": "<p>Enable auto zstd decompression. Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.deflate": {"fullname": "pyreqwest.client.BaseClientBuilder.deflate", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.deflate", "kind": "function", "doc": "<p>Enable auto deflate decompression. Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"fullname": "pyreqwest.client.BaseClientBuilder.max_redirects", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.max_redirects", "kind": "function", "doc": "<p>Set maximum number of followed redirects. Default will follow redirects up to a maximum of 10.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_redirects</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.referer": {"fullname": "pyreqwest.client.BaseClientBuilder.referer", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.referer", "kind": "function", "doc": "<p>Enable or disable automatic setting of the Referer header. Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.proxy": {"fullname": "pyreqwest.client.BaseClientBuilder.proxy", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.proxy", "kind": "function", "doc": "<p>Add a proxy based on ProxyBuilder to the list of proxies the Client will use.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">proxy</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">ProxyBuilder</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"fullname": "pyreqwest.client.BaseClientBuilder.no_proxy", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.no_proxy", "kind": "function", "doc": "<p>Clear all Proxies, so Client will use no proxy anymore.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.timeout", "kind": "function", "doc": "<p>Enables a total request timeout. Default is no timeout.</p>\n\n<p>The timeout is applied from when the request starts connecting until the response body has finished.\nAlso considered a total deadline.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.read_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.read_timeout", "kind": "function", "doc": "<p>Enables a read timeout. Default is no timeout.</p>\n\n<p>The timeout applies to each read operation, and resets after a successful read. This is more appropriate for\ndetecting stalled connections when the size isn't known beforehand.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.connect_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.connect_timeout", "kind": "function", "doc": "<p>Set a timeout for only the connect phase of a Client. Default is None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.pool_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.pool_timeout", "kind": "function", "doc": "<p>Max wait time for an idle connection slot.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.pool_idle_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.pool_idle_timeout", "kind": "function", "doc": "<p>Set an optional timeout for idle sockets being kept-alive. Default is 90 seconds.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"fullname": "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.pool_max_idle_per_host", "kind": "function", "doc": "<p>Sets the maximum idle connection per host allowed in the pool.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_idle</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"fullname": "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http1_lower_case_headers", "kind": "function", "doc": "<p>Send headers as lowercase instead of title case. Default is false.</p>\n\n<p>This differs from reqwest which uses lowercase by default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"fullname": "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses", "kind": "function", "doc": "<p>Set whether HTTP/1 connections will accept obsolete line folding for header values.</p>\n\n<p>Newline codepoints will be transformed to spaces when parsing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"fullname": "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http1_ignore_invalid_headers_in_responses", "kind": "function", "doc": "<p>Sets whether invalid header lines should be silently ignored in HTTP/1 responses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"fullname": "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses", "kind": "function", "doc": "<p>Set whether HTTP/1 accepts spaces between header names and the colon that follow them in responses.</p>\n\n<p>Newline codepoints will be transformed to spaces when parsing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http1_only": {"fullname": "pyreqwest.client.BaseClientBuilder.http1_only", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http1_only", "kind": "function", "doc": "<p>Only use HTTP/1.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"fullname": "pyreqwest.client.BaseClientBuilder.http09_responses", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http09_responses", "kind": "function", "doc": "<p>Allow HTTP/0.9 responses (very old / uncommon).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_prior_knowledge", "kind": "function", "doc": "<p>Only use HTTP/2.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_initial_stream_window_size", "kind": "function", "doc": "<p>Sets the SETTINGS_INITIAL_WINDOW_SIZE option for HTTP2 stream-level flow control. Default is 65K.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_initial_connection_window_size", "kind": "function", "doc": "<p>Sets the max connection-level flow control for HTTP2. Default is currently 65K.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_adaptive_window", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_adaptive_window", "kind": "function", "doc": "<p>Sets whether to use an adaptive flow control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_max_frame_size", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_max_frame_size", "kind": "function", "doc": "<p>Sets the maximum frame size to use for HTTP2. Default is currently 16K.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_max_header_list_size", "kind": "function", "doc": "<p>Sets the maximum size of received header frames for HTTP2. Default is currently 16KB.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_keep_alive_interval", "kind": "function", "doc": "<p>Sets an interval for HTTP2 Ping frames should be sent to keep a connection alive. Default is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_keep_alive_timeout", "kind": "function", "doc": "<p>Sets a timeout for receiving an acknowledgement of the keep-alive ping. Default is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"fullname": "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.http2_keep_alive_while_idle", "kind": "function", "doc": "<p>Sets whether HTTP2 keep-alive should apply while the connection is idle. Default is false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"fullname": "pyreqwest.client.BaseClientBuilder.tcp_nodelay", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tcp_nodelay", "kind": "function", "doc": "<p>Set TCP_NODELAY (disable Nagle). Default is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.local_address": {"fullname": "pyreqwest.client.BaseClientBuilder.local_address", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.local_address", "kind": "function", "doc": "<p>Bind to a local IP Address.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addr</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.interface": {"fullname": "pyreqwest.client.BaseClientBuilder.interface", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.interface", "kind": "function", "doc": "<p>Bind connections only on the specified network interface.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"fullname": "pyreqwest.client.BaseClientBuilder.tcp_keepalive", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tcp_keepalive", "kind": "function", "doc": "<p>Set SO_KEEPALIVE duration (overall TCP keepalive time).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"fullname": "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tcp_keepalive_interval", "kind": "function", "doc": "<p>Set SO_KEEPALIVE interval (TCP keepalive probe interval).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"fullname": "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tcp_keepalive_retries", "kind": "function", "doc": "<p>Set SO_KEEPALIVE retry count (number of failed keepalive probes before drop).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"fullname": "pyreqwest.client.BaseClientBuilder.tcp_user_timeout", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tcp_user_timeout", "kind": "function", "doc": "<p>Set TCP_USER_TIMEOUT (how long data may remain unacknowledged before the connection is force-closed).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"fullname": "pyreqwest.client.BaseClientBuilder.add_root_certificate_der", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.add_root_certificate_der", "kind": "function", "doc": "<p>Trust additional DER root certificate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cert</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"fullname": "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.add_root_certificate_pem", "kind": "function", "doc": "<p>Trust additional PEM root certificate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cert</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"fullname": "pyreqwest.client.BaseClientBuilder.add_crl_pem", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.add_crl_pem", "kind": "function", "doc": "<p>Add a certificate revocation list from PEM data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cert</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"fullname": "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tls_built_in_root_certs", "kind": "function", "doc": "<p>Toggle built-in root cert usage. Defaults to true - built-in system certs will be used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"fullname": "pyreqwest.client.BaseClientBuilder.identity_pem", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.identity_pem", "kind": "function", "doc": "<p>Sets the identity to be used for client certificate authentication.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">buf</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"fullname": "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.danger_accept_invalid_hostnames", "kind": "function", "doc": "<p>Disable hostname verification (INSECURE). Defaults to false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"fullname": "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.danger_accept_invalid_certs", "kind": "function", "doc": "<p>Disable certificate validation (INSECURE). Defaults to false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"fullname": "pyreqwest.client.BaseClientBuilder.tls_sni", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.tls_sni", "kind": "function", "doc": "<p>Enable / disable TLS server name indication. Defaults to true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"fullname": "pyreqwest.client.BaseClientBuilder.min_tls_version", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.min_tls_version", "kind": "function", "doc": "<p>Set minimum accepted TLS version.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;TLSv1.0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.3&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"fullname": "pyreqwest.client.BaseClientBuilder.max_tls_version", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.max_tls_version", "kind": "function", "doc": "<p>Set maximum accepted TLS version.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;TLSv1.0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLSv1.3&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.https_only": {"fullname": "pyreqwest.client.BaseClientBuilder.https_only", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.https_only", "kind": "function", "doc": "<p>Refuse plain HTTP (HTTPS required). Defaults to false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.BaseClientBuilder.resolve": {"fullname": "pyreqwest.client.BaseClientBuilder.resolve", "modulename": "pyreqwest.client", "qualname": "BaseClientBuilder.resolve", "kind": "function", "doc": "<p>Add static DNS resolution mapping (domain -> ip:port).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.client.Runtime": {"fullname": "pyreqwest.client.Runtime", "modulename": "pyreqwest.client", "qualname": "Runtime", "kind": "class", "doc": "<p>Tokio runtime instance. Usually not needed, as library global runtime is used by default.</p>\n"}, "pyreqwest.client.Runtime.__init__": {"fullname": "pyreqwest.client.Runtime.__init__", "modulename": "pyreqwest.client", "qualname": "Runtime.__init__", "kind": "function", "doc": "<p>Create a tokio runtime instance. This is an advanced feature.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.client.Runtime.close": {"fullname": "pyreqwest.client.Runtime.close", "modulename": "pyreqwest.client", "qualname": "Runtime.close", "kind": "function", "doc": "<p>Shutdown runtime resources. Clients using this runtime won't work anymore after closing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.cookie": {"fullname": "pyreqwest.cookie", "modulename": "pyreqwest.cookie", "kind": "module", "doc": "<p>HTTP cookie types backed by Rust's cookie and cookie_store crates.</p>\n"}, "pyreqwest.cookie.Cookie": {"fullname": "pyreqwest.cookie.Cookie", "modulename": "pyreqwest.cookie", "qualname": "Cookie", "kind": "class", "doc": "<p>An immutable HTTP cookie. Lightweight Python wrapper around the internal Rust cookie::Cookie type.\nUse <code>with_*</code> methods to create modified copies of a Cookie.</p>\n\n<p>See also Rust <a href=\"https://docs.rs/cookie/latest/cookie/struct.Cookie.html\">docs</a> for more details.</p>\n"}, "pyreqwest.cookie.Cookie.__init__": {"fullname": "pyreqwest.cookie.Cookie.__init__", "modulename": "pyreqwest.cookie", "qualname": "Cookie.__init__", "kind": "function", "doc": "<p>Create a cookie with the given name and value (no attributes).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "pyreqwest.cookie.Cookie.parse": {"fullname": "pyreqwest.cookie.Cookie.parse", "modulename": "pyreqwest.cookie", "qualname": "Cookie.parse", "kind": "function", "doc": "<p>Parses a Cookie from the given HTTP cookie header value string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cookie</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.parse_encoded": {"fullname": "pyreqwest.cookie.Cookie.parse_encoded", "modulename": "pyreqwest.cookie", "qualname": "Cookie.parse_encoded", "kind": "function", "doc": "<p>Like parse, but does percent-decoding of keys and values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cookie</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.split_parse": {"fullname": "pyreqwest.cookie.Cookie.split_parse", "modulename": "pyreqwest.cookie", "qualname": "Cookie.split_parse", "kind": "function", "doc": "<p>Parses the HTTP Cookie header, a series of cookie names and value separated by <code>;</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cookie</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"fullname": "pyreqwest.cookie.Cookie.split_parse_encoded", "modulename": "pyreqwest.cookie", "qualname": "Cookie.split_parse_encoded", "kind": "function", "doc": "<p>Like split_parse, but does percent-decoding of keys and values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cookie</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.encode": {"fullname": "pyreqwest.cookie.Cookie.encode", "modulename": "pyreqwest.cookie", "qualname": "Cookie.encode", "kind": "function", "doc": "<p>Returns cookie string with percent-encoding applied.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.stripped": {"fullname": "pyreqwest.cookie.Cookie.stripped", "modulename": "pyreqwest.cookie", "qualname": "Cookie.stripped", "kind": "function", "doc": "<p>Return just the 'name=value' pair.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_name": {"fullname": "pyreqwest.cookie.Cookie.with_name", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_name", "kind": "function", "doc": "<p>Set name, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_value": {"fullname": "pyreqwest.cookie.Cookie.with_value", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_value", "kind": "function", "doc": "<p>Set value, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_http_only": {"fullname": "pyreqwest.cookie.Cookie.with_http_only", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_http_only", "kind": "function", "doc": "<p>Set HttpOnly attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">http_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_secure": {"fullname": "pyreqwest.cookie.Cookie.with_secure", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_secure", "kind": "function", "doc": "<p>Set Secure attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">secure</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_same_site": {"fullname": "pyreqwest.cookie.Cookie.with_same_site", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_same_site", "kind": "function", "doc": "<p>Set SameSite attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">same_site</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;Strict&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Lax&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;None&#39;</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_partitioned": {"fullname": "pyreqwest.cookie.Cookie.with_partitioned", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_partitioned", "kind": "function", "doc": "<p>Set Partitioned attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">partitioned</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_max_age": {"fullname": "pyreqwest.cookie.Cookie.with_max_age", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_max_age", "kind": "function", "doc": "<p>Set Max-Age attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_age</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_path": {"fullname": "pyreqwest.cookie.Cookie.with_path", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_path", "kind": "function", "doc": "<p>Set Path attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_domain": {"fullname": "pyreqwest.cookie.Cookie.with_domain", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_domain", "kind": "function", "doc": "<p>Set Domain attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"fullname": "pyreqwest.cookie.Cookie.with_expires_datetime", "modulename": "pyreqwest.cookie", "qualname": "Cookie.with_expires_datetime", "kind": "function", "doc": "<p>Set Expires attribute, returning a new Cookie.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expires</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.Cookie.partitioned": {"fullname": "pyreqwest.cookie.Cookie.partitioned", "modulename": "pyreqwest.cookie", "qualname": "Cookie.partitioned", "kind": "variable", "doc": "<p>Whether the Partitioned attribute is set.</p>\n", "annotation": ": bool"}, "pyreqwest.cookie.Cookie.secure": {"fullname": "pyreqwest.cookie.Cookie.secure", "modulename": "pyreqwest.cookie", "qualname": "Cookie.secure", "kind": "variable", "doc": "<p>Whether the Secure attribute is set.</p>\n", "annotation": ": bool"}, "pyreqwest.cookie.Cookie.same_site": {"fullname": "pyreqwest.cookie.Cookie.same_site", "modulename": "pyreqwest.cookie", "qualname": "Cookie.same_site", "kind": "variable", "doc": "<p>SameSite attribute, or None if unspecified.</p>\n", "annotation": ": Optional[Literal[&#x27;Strict&#x27;, &#x27;Lax&#x27;, &#x27;None&#x27;]]"}, "pyreqwest.cookie.Cookie.value": {"fullname": "pyreqwest.cookie.Cookie.value", "modulename": "pyreqwest.cookie", "qualname": "Cookie.value", "kind": "variable", "doc": "<p>Raw cookie value as set (may contain surrounding whitespace).</p>\n", "annotation": ": str"}, "pyreqwest.cookie.Cookie.expires_datetime": {"fullname": "pyreqwest.cookie.Cookie.expires_datetime", "modulename": "pyreqwest.cookie", "qualname": "Cookie.expires_datetime", "kind": "variable", "doc": "<p>Absolute expiration time (Expires), or None if not present.</p>\n", "annotation": ": datetime.datetime | None"}, "pyreqwest.cookie.Cookie.name": {"fullname": "pyreqwest.cookie.Cookie.name", "modulename": "pyreqwest.cookie", "qualname": "Cookie.name", "kind": "variable", "doc": "<p>Cookie name.</p>\n", "annotation": ": str"}, "pyreqwest.cookie.Cookie.value_trimmed": {"fullname": "pyreqwest.cookie.Cookie.value_trimmed", "modulename": "pyreqwest.cookie", "qualname": "Cookie.value_trimmed", "kind": "variable", "doc": "<p>Value with surrounding whitespace trimmed.</p>\n", "annotation": ": str"}, "pyreqwest.cookie.Cookie.path": {"fullname": "pyreqwest.cookie.Cookie.path", "modulename": "pyreqwest.cookie", "qualname": "Cookie.path", "kind": "variable", "doc": "<p>Path attribute that scopes the cookie, or None if not present.</p>\n", "annotation": ": str | None"}, "pyreqwest.cookie.Cookie.max_age": {"fullname": "pyreqwest.cookie.Cookie.max_age", "modulename": "pyreqwest.cookie", "qualname": "Cookie.max_age", "kind": "variable", "doc": "<p>Max-Age attribute duration, or None if not present.</p>\n", "annotation": ": datetime.timedelta | None"}, "pyreqwest.cookie.Cookie.domain": {"fullname": "pyreqwest.cookie.Cookie.domain", "modulename": "pyreqwest.cookie", "qualname": "Cookie.domain", "kind": "variable", "doc": "<p>Domain attribute that scopes the cookie, or None if not present.</p>\n", "annotation": ": str | None"}, "pyreqwest.cookie.Cookie.http_only": {"fullname": "pyreqwest.cookie.Cookie.http_only", "modulename": "pyreqwest.cookie", "qualname": "Cookie.http_only", "kind": "variable", "doc": "<p>Whether the HttpOnly attribute is set.</p>\n", "annotation": ": bool"}, "pyreqwest.cookie.CookieStore": {"fullname": "pyreqwest.cookie.CookieStore", "modulename": "pyreqwest.cookie", "qualname": "CookieStore", "kind": "class", "doc": "<p>Thread-safe in-memory cookie store (domain/path aware). Mirrors the behavior of Rust's cookie_store.</p>\n\n<p>See also Rust <a href=\"https://docs.rs/cookie_store/latest/cookie_store/struct.CookieStore.html\">docs</a> for more details.</p>\n"}, "pyreqwest.cookie.CookieStore.__init__": {"fullname": "pyreqwest.cookie.CookieStore.__init__", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.__init__", "kind": "function", "doc": "<p>Create an empty cookie store.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.cookie.CookieStore.matches": {"fullname": "pyreqwest.cookie.CookieStore.matches", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.matches", "kind": "function", "doc": "<p>Returns a collection of references to unexpired cookies that path- and domain-match request_url, as well as\nhaving HttpOnly and Secure attributes compatible with the request_url.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.contains": {"fullname": "pyreqwest.cookie.CookieStore.contains", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.contains", "kind": "function", "doc": "<p>Returns true if the CookieStore contains an unexpired Cookie corresponding to the specified domain, path,\nand name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.contains_any": {"fullname": "pyreqwest.cookie.CookieStore.contains_any", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.contains_any", "kind": "function", "doc": "<p>Returns true if the CookieStore contains any (even an expired) Cookie corresponding to the specified\ndomain, path, and name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.get": {"fullname": "pyreqwest.cookie.CookieStore.get", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.get", "kind": "function", "doc": "<p>Returns a reference to the unexpired Cookie corresponding to the specified domain, path, and name.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.get_any": {"fullname": "pyreqwest.cookie.CookieStore.get_any", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.get_any", "kind": "function", "doc": "<p>Returns a reference to the (possibly expired) Cookie corresponding to the specified domain, path, and\nname.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.remove": {"fullname": "pyreqwest.cookie.CookieStore.remove", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.remove", "kind": "function", "doc": "<p>Removes a Cookie from the store, returning the Cookie if it was in the store.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.insert": {"fullname": "pyreqwest.cookie.CookieStore.insert", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.insert", "kind": "function", "doc": "<p>Insert a cookie as if set by a response for request_url.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">cookie</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.clear": {"fullname": "pyreqwest.cookie.CookieStore.clear", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.clear", "kind": "function", "doc": "<p>Remove all cookies from the store.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"fullname": "pyreqwest.cookie.CookieStore.get_all_unexpired", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.get_all_unexpired", "kind": "function", "doc": "<p>Return all unexpired cookies currently stored.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.cookie.CookieStore.get_all_any": {"fullname": "pyreqwest.cookie.CookieStore.get_all_any", "modulename": "pyreqwest.cookie", "qualname": "CookieStore.get_all_any", "kind": "function", "doc": "<p>Return all cookies in the store, including expired ones.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">cookie</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.exceptions": {"fullname": "pyreqwest.exceptions", "modulename": "pyreqwest.exceptions", "kind": "module", "doc": "<p>Exception classes.</p>\n"}, "pyreqwest.exceptions.Cause": {"fullname": "pyreqwest.exceptions.Cause", "modulename": "pyreqwest.exceptions", "qualname": "Cause", "kind": "class", "doc": "<p>A cause of an error.</p>\n", "bases": "typing.TypedDict"}, "pyreqwest.exceptions.Cause.message": {"fullname": "pyreqwest.exceptions.Cause.message", "modulename": "pyreqwest.exceptions", "qualname": "Cause.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pyreqwest.exceptions.CauseErrorDetails": {"fullname": "pyreqwest.exceptions.CauseErrorDetails", "modulename": "pyreqwest.exceptions", "qualname": "CauseErrorDetails", "kind": "class", "doc": "<p>Details for errors that may have causes.</p>\n", "bases": "typing.TypedDict"}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"fullname": "pyreqwest.exceptions.CauseErrorDetails.causes", "modulename": "pyreqwest.exceptions", "qualname": "CauseErrorDetails.causes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[pyreqwest.exceptions.Cause] | None"}, "pyreqwest.exceptions.StatusErrorDetails": {"fullname": "pyreqwest.exceptions.StatusErrorDetails", "modulename": "pyreqwest.exceptions", "qualname": "StatusErrorDetails", "kind": "class", "doc": "<p>Details for errors that have an associated HTTP status code.</p>\n", "bases": "typing.TypedDict"}, "pyreqwest.exceptions.StatusErrorDetails.status": {"fullname": "pyreqwest.exceptions.StatusErrorDetails.status", "modulename": "pyreqwest.exceptions", "qualname": "StatusErrorDetails.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pyreqwest.exceptions.PyreqwestError": {"fullname": "pyreqwest.exceptions.PyreqwestError", "modulename": "pyreqwest.exceptions", "qualname": "PyreqwestError", "kind": "class", "doc": "<p>Base class for all pyreqwest errors.</p>\n", "bases": "builtins.Exception"}, "pyreqwest.exceptions.PyreqwestError.__init__": {"fullname": "pyreqwest.exceptions.PyreqwestError.__init__", "modulename": "pyreqwest.exceptions", "qualname": "PyreqwestError.__init__", "kind": "function", "doc": "<p>Internally initialized.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "pyreqwest.exceptions.PyreqwestError.message": {"fullname": "pyreqwest.exceptions.PyreqwestError.message", "modulename": "pyreqwest.exceptions", "qualname": "PyreqwestError.message", "kind": "variable", "doc": "<p></p>\n"}, "pyreqwest.exceptions.DetailedPyreqwestError": {"fullname": "pyreqwest.exceptions.DetailedPyreqwestError", "modulename": "pyreqwest.exceptions", "qualname": "DetailedPyreqwestError", "kind": "class", "doc": "<p>Base class for all pyreqwest errors with details.</p>\n\n<p>Details may be available in <code>details</code>.</p>\n", "bases": "PyreqwestError, typing.Generic[~T]"}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"fullname": "pyreqwest.exceptions.DetailedPyreqwestError.details", "modulename": "pyreqwest.exceptions", "qualname": "DetailedPyreqwestError.details", "kind": "variable", "doc": "<p></p>\n"}, "pyreqwest.exceptions.RequestError": {"fullname": "pyreqwest.exceptions.RequestError", "modulename": "pyreqwest.exceptions", "qualname": "RequestError", "kind": "class", "doc": "<p>Error while processing a request.</p>\n\n<p>Details may be available in <code>details</code>.</p>\n", "bases": "pyreqwest.exceptions.DetailedPyreqwestError[~T], typing.Generic[~T]"}, "pyreqwest.exceptions.StatusError": {"fullname": "pyreqwest.exceptions.StatusError", "modulename": "pyreqwest.exceptions", "qualname": "StatusError", "kind": "class", "doc": "<p>Error due to HTTP 4xx or 5xx status code. Raised when <code>error_for_status</code> is enabled.</p>\n\n<p>The status code is available in <code>details[\"status\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.StatusErrorDetails]"}, "pyreqwest.exceptions.RedirectError": {"fullname": "pyreqwest.exceptions.RedirectError", "modulename": "pyreqwest.exceptions", "qualname": "RedirectError", "kind": "class", "doc": "<p>Error due to too many redirects. Raised when <code>max_redirects</code> is exceeded.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.DecodeError": {"fullname": "pyreqwest.exceptions.DecodeError", "modulename": "pyreqwest.exceptions", "qualname": "DecodeError", "kind": "class", "doc": "<p>Error while decoding the response.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.BodyDecodeError": {"fullname": "pyreqwest.exceptions.BodyDecodeError", "modulename": "pyreqwest.exceptions", "qualname": "BodyDecodeError", "kind": "class", "doc": "<p>Error while decoding the request or response body.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.JSONDecodeError": {"fullname": "pyreqwest.exceptions.JSONDecodeError", "modulename": "pyreqwest.exceptions", "qualname": "JSONDecodeError", "kind": "class", "doc": "<p>Error while decoding the response body as JSON.</p>\n\n<p>This corresponds to Python's built-in <code>json.JSONDecodeError</code>. With the difference that <code>pos</code> and <code>colno</code> are byte\noffsets instead of UTF8 char offsets. This difference is for efficient error handling (avoiding UTF8 conversions).</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"fullname": "pyreqwest.exceptions.JSONDecodeError.__init__", "modulename": "pyreqwest.exceptions", "qualname": "JSONDecodeError.__init__", "kind": "function", "doc": "<p>Internally initialized.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">details</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "pyreqwest.exceptions.TransportError": {"fullname": "pyreqwest.exceptions.TransportError", "modulename": "pyreqwest.exceptions", "qualname": "TransportError", "kind": "class", "doc": "<p>Error while processing the transport layer.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.RequestTimeoutError": {"fullname": "pyreqwest.exceptions.RequestTimeoutError", "modulename": "pyreqwest.exceptions", "qualname": "RequestTimeoutError", "kind": "class", "doc": "<p>Error due to a timeout.</p>\n\n<p>This indicates that the timeout configured for the request was reached.\nCause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.NetworkError": {"fullname": "pyreqwest.exceptions.NetworkError", "modulename": "pyreqwest.exceptions", "qualname": "NetworkError", "kind": "class", "doc": "<p>Error due to a network failure.</p>\n\n<p>This indicates that the request could not be completed due to a network failure.\nCause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.ConnectTimeoutError": {"fullname": "pyreqwest.exceptions.ConnectTimeoutError", "modulename": "pyreqwest.exceptions", "qualname": "ConnectTimeoutError", "kind": "class", "doc": "<p>Timeout while connecting.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.ReadTimeoutError": {"fullname": "pyreqwest.exceptions.ReadTimeoutError", "modulename": "pyreqwest.exceptions", "qualname": "ReadTimeoutError", "kind": "class", "doc": "<p>Timeout while reading body.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.WriteTimeoutError": {"fullname": "pyreqwest.exceptions.WriteTimeoutError", "modulename": "pyreqwest.exceptions", "qualname": "WriteTimeoutError", "kind": "class", "doc": "<p>Timeout while sending body.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.PoolTimeoutError": {"fullname": "pyreqwest.exceptions.PoolTimeoutError", "modulename": "pyreqwest.exceptions", "qualname": "PoolTimeoutError", "kind": "class", "doc": "<p>Timeout while acquiring a connection from the pool.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.ConnectError": {"fullname": "pyreqwest.exceptions.ConnectError", "modulename": "pyreqwest.exceptions", "qualname": "ConnectError", "kind": "class", "doc": "<p>Network error while connecting.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.ReadError": {"fullname": "pyreqwest.exceptions.ReadError", "modulename": "pyreqwest.exceptions", "qualname": "ReadError", "kind": "class", "doc": "<p>Network error while reading body.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.WriteError": {"fullname": "pyreqwest.exceptions.WriteError", "modulename": "pyreqwest.exceptions", "qualname": "WriteError", "kind": "class", "doc": "<p>Network error while sending body.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.ClientClosedError": {"fullname": "pyreqwest.exceptions.ClientClosedError", "modulename": "pyreqwest.exceptions", "qualname": "ClientClosedError", "kind": "class", "doc": "<p>Error due to user closing the client while request was being processed.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.exceptions.BuilderError": {"fullname": "pyreqwest.exceptions.BuilderError", "modulename": "pyreqwest.exceptions", "qualname": "BuilderError", "kind": "class", "doc": "<p>Error while building a request.</p>\n\n<p>Cause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.DetailedPyreqwestError[pyreqwest.exceptions.CauseErrorDetails], builtins.ValueError"}, "pyreqwest.exceptions.RequestPanicError": {"fullname": "pyreqwest.exceptions.RequestPanicError", "modulename": "pyreqwest.exceptions", "qualname": "RequestPanicError", "kind": "class", "doc": "<p>Error due to a panic in the request processing.</p>\n\n<p>This indicates a bug in pyreqwest or one of its dependencies.\nAlso, might be raised due to incorrect ProxyBuilder.custom implementation (limitation in reqwest error handling).\nCause details may be available in <code>details[\"causes\"]</code>.</p>\n", "bases": "pyreqwest.exceptions.RequestError[pyreqwest.exceptions.CauseErrorDetails]"}, "pyreqwest.http": {"fullname": "pyreqwest.http", "modulename": "pyreqwest.http", "kind": "module", "doc": "<p>HTTP utils classes and types.</p>\n"}, "pyreqwest.http.Url": {"fullname": "pyreqwest.http.Url", "modulename": "pyreqwest.http", "qualname": "Url", "kind": "class", "doc": "<p>Immutable parsed URL. Python wrapper around the internal Rust url::Url type.</p>\n\n<p>See also Rust <a href=\"https://docs.rs/url/latest/url/struct.Url.html\">docs</a> for more details.</p>\n"}, "pyreqwest.http.Url.__init__": {"fullname": "pyreqwest.http.Url.__init__", "modulename": "pyreqwest.http", "qualname": "Url.__init__", "kind": "function", "doc": "<p>Parse an absolute URL from a string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "pyreqwest.http.Url.parse": {"fullname": "pyreqwest.http.Url.parse", "modulename": "pyreqwest.http", "qualname": "Url.parse", "kind": "function", "doc": "<p>Parse an absolute URL from a string. Same as Url(url).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.parse_with_params": {"fullname": "pyreqwest.http.Url.parse_with_params", "modulename": "pyreqwest.http", "qualname": "Url.parse_with_params", "kind": "function", "doc": "<p>Parse an absolute URL from a string and add params to its query string. Existing params are not removed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.is_valid": {"fullname": "pyreqwest.http.Url.is_valid", "modulename": "pyreqwest.http", "qualname": "Url.is_valid", "kind": "function", "doc": "<p>Check is given value a valid absolute URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.join": {"fullname": "pyreqwest.http.Url.join", "modulename": "pyreqwest.http", "qualname": "Url.join", "kind": "function", "doc": "<p>Parse a string as a URL, with this URL as the base URL. The inverse of this is make_relative.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>A trailing slash is significant. Without it, the last path component is considered to be a \u201cfile\u201d name to be\nremoved to get at the \u201cdirectory\u201d that is used as the base.</li>\n<li>A scheme relative special URL   as input replaces everything in the base URL after the scheme.</li>\n<li>An absolute URL (with a scheme) as input replaces the whole base URL (even the scheme).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">join_input</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.make_relative": {"fullname": "pyreqwest.http.Url.make_relative", "modulename": "pyreqwest.http", "qualname": "Url.make_relative", "kind": "function", "doc": "<p>Creates a relative URL if possible, with this URL as the base URL. This is the inverse of join.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Self</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_query": {"fullname": "pyreqwest.http.Url.with_query", "modulename": "pyreqwest.http", "qualname": "Url.with_query", "kind": "function", "doc": "<p>Replace the entire query with provided params (None removes query).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.extend_query": {"fullname": "pyreqwest.http.Url.extend_query", "modulename": "pyreqwest.http", "qualname": "Url.extend_query", "kind": "function", "doc": "<p>Append additional key/value pairs to existing query keeping original order.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_query_string": {"fullname": "pyreqwest.http.Url.with_query_string", "modulename": "pyreqwest.http", "qualname": "Url.with_query_string", "kind": "function", "doc": "<p>Replace query using a preformatted string (no leading '?'). None removes it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_path": {"fullname": "pyreqwest.http.Url.with_path", "modulename": "pyreqwest.http", "qualname": "Url.with_path", "kind": "function", "doc": "<p>Return a copy with a new path. Accepts with/without leading '/'. Empty path means '/'.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_path_segments": {"fullname": "pyreqwest.http.Url.with_path_segments", "modulename": "pyreqwest.http", "qualname": "Url.with_path_segments", "kind": "function", "doc": "<p>Append each segment from the given list at the end of this URL's path.\nEach segment is percent-encoded, except that % and / characters are also encoded (to %25 and %2F).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">segments</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_port": {"fullname": "pyreqwest.http.Url.with_port", "modulename": "pyreqwest.http", "qualname": "Url.with_port", "kind": "function", "doc": "<p>Change this URL's port number. None removes explicit port.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_host": {"fullname": "pyreqwest.http.Url.with_host", "modulename": "pyreqwest.http", "qualname": "Url.with_host", "kind": "function", "doc": "<p>Change this URL's host.\nRemoving the host (calling this with None) will also remove any username, password, and port number.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_ip_host": {"fullname": "pyreqwest.http.Url.with_ip_host", "modulename": "pyreqwest.http", "qualname": "Url.with_ip_host", "kind": "function", "doc": "<p>Change this URL's host to the given IP address.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addr</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_username": {"fullname": "pyreqwest.http.Url.with_username", "modulename": "pyreqwest.http", "qualname": "Url.with_username", "kind": "function", "doc": "<p>Change this URL's username.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_password": {"fullname": "pyreqwest.http.Url.with_password", "modulename": "pyreqwest.http", "qualname": "Url.with_password", "kind": "function", "doc": "<p>Change this URL's password.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_scheme": {"fullname": "pyreqwest.http.Url.with_scheme", "modulename": "pyreqwest.http", "qualname": "Url.with_scheme", "kind": "function", "doc": "<p>Change this URL's scheme.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.with_fragment": {"fullname": "pyreqwest.http.Url.with_fragment", "modulename": "pyreqwest.http", "qualname": "Url.with_fragment", "kind": "function", "doc": "<p>Change this URL's fragment identifier.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fragment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Url.origin_unicode": {"fullname": "pyreqwest.http.Url.origin_unicode", "modulename": "pyreqwest.http", "qualname": "Url.origin_unicode", "kind": "variable", "doc": "<p>Return the origin of this URL Unicode-serialized.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.password": {"fullname": "pyreqwest.http.Url.password", "modulename": "pyreqwest.http", "qualname": "Url.password", "kind": "variable", "doc": "<p>Return the password for this URL, if any, as a percent-encoded ASCII string.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.Url.host_str": {"fullname": "pyreqwest.http.Url.host_str", "modulename": "pyreqwest.http", "qualname": "Url.host_str", "kind": "variable", "doc": "<p>Return the string representation of the host (domain or IP address) for this URL, if any.</p>\n\n<p>Non-ASCII domains are punycode-encoded per IDNA if this is the host of a special URL, or percent encoded for\nnon-special URLs. IPv6 addresses are given between [ and ] brackets.\nCannot-be-a-base URLs (typical of data: and mailto:) and some file: URLs don't have a host.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.Url.query_dict_multi_value": {"fullname": "pyreqwest.http.Url.query_dict_multi_value", "modulename": "pyreqwest.http", "qualname": "Url.query_dict_multi_value", "kind": "variable", "doc": "<p>Parse the URL's query string, if any, as urlencoded and return dict where repeated keys become a list\npreserving order.</p>\n", "annotation": ": dict[str, str | list[str]]"}, "pyreqwest.http.Url.has_authority": {"fullname": "pyreqwest.http.Url.has_authority", "modulename": "pyreqwest.http", "qualname": "Url.has_authority", "kind": "variable", "doc": "<p>Return whether the URL has an 'authority', which can contain a username, password, host, and port number.</p>\n\n<p>URLs that do not are either path-only like unix:/run/foo.socket or cannot-be-a-base like data:text/plain,Stuff.\nSee also the <code>authority</code> method.</p>\n", "annotation": ": bool"}, "pyreqwest.http.Url.username": {"fullname": "pyreqwest.http.Url.username", "modulename": "pyreqwest.http", "qualname": "Url.username", "kind": "variable", "doc": "<p>Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.query_string": {"fullname": "pyreqwest.http.Url.query_string", "modulename": "pyreqwest.http", "qualname": "Url.query_string", "kind": "variable", "doc": "<p>Return this URL's query string, if any, as a percent-encoded ASCII string.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.Url.port": {"fullname": "pyreqwest.http.Url.port", "modulename": "pyreqwest.http", "qualname": "Url.port", "kind": "variable", "doc": "<p>Return the port number for this URL, if any.</p>\n", "annotation": ": int | None"}, "pyreqwest.http.Url.port_or_known_default": {"fullname": "pyreqwest.http.Url.port_or_known_default", "modulename": "pyreqwest.http", "qualname": "Url.port_or_known_default", "kind": "variable", "doc": "<p>Return the port number for this URL, or the default port number if it is known.</p>\n\n<p>This method only knows the default port number of the http, https, ws, wss and ftp schemes.</p>\n", "annotation": ": int | None"}, "pyreqwest.http.Url.has_host": {"fullname": "pyreqwest.http.Url.has_host", "modulename": "pyreqwest.http", "qualname": "Url.has_host", "kind": "variable", "doc": "<p>Equivalent to bool(url.host_str).</p>\n", "annotation": ": bool"}, "pyreqwest.http.Url.fragment": {"fullname": "pyreqwest.http.Url.fragment", "modulename": "pyreqwest.http", "qualname": "Url.fragment", "kind": "variable", "doc": "<p>Return this URL's fragment identifier, if any. A fragment is the part of the URL after the # symbol.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.Url.path_segments": {"fullname": "pyreqwest.http.Url.path_segments", "modulename": "pyreqwest.http", "qualname": "Url.path_segments", "kind": "variable", "doc": "<p>Unless this URL is cannot-be-a-base, return a list of '/' slash-separated path segments, each as a\npercent-encoded ASCII string. Return None for cannot-be-a-base URLs. When list is returned, it always contains\nat least one string (which may be empty).</p>\n", "annotation": ": list[str] | None"}, "pyreqwest.http.Url.is_special": {"fullname": "pyreqwest.http.Url.is_special", "modulename": "pyreqwest.http", "qualname": "Url.is_special", "kind": "variable", "doc": "<p>Whether the scheme is a WHATWG \"special\" scheme (http, https, ws, wss, ftp, file).</p>\n", "annotation": ": bool"}, "pyreqwest.http.Url.cannot_be_a_base": {"fullname": "pyreqwest.http.Url.cannot_be_a_base", "modulename": "pyreqwest.http", "qualname": "Url.cannot_be_a_base", "kind": "variable", "doc": "<p>Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL\nas the base will return an error.</p>\n\n<p>This is the case if the scheme and : delimiter are not followed by a / slash, as is typically the case of data:\nand mailto: URLs.</p>\n", "annotation": ": bool"}, "pyreqwest.http.Url.path": {"fullname": "pyreqwest.http.Url.path", "modulename": "pyreqwest.http", "qualname": "Url.path", "kind": "variable", "doc": "<p>Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an\narbitrary string that doesn't start with '/'. For other URLs, this starts with a '/' slash and continues with\nslash-separated path segments.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.scheme": {"fullname": "pyreqwest.http.Url.scheme", "modulename": "pyreqwest.http", "qualname": "Url.scheme", "kind": "variable", "doc": "<p>Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.authority": {"fullname": "pyreqwest.http.Url.authority", "modulename": "pyreqwest.http", "qualname": "Url.authority", "kind": "variable", "doc": "<p>Return the authority of this URL as an ASCII string.</p>\n\n<p>Non-ASCII domains are punycode-encoded per IDNA if this is the host of a special URL, or percent encoded for\nnon-special URLs. IPv6 addresses are given between [ and ] brackets. Ports are omitted if they match the well\nknown port of a special URL. Username and password are percent-encoded.\nSee also the <code>has_authority</code> method.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.origin_ascii": {"fullname": "pyreqwest.http.Url.origin_ascii", "modulename": "pyreqwest.http", "qualname": "Url.origin_ascii", "kind": "variable", "doc": "<p>Return the origin of this URL ASCII-serialized.</p>\n", "annotation": ": str"}, "pyreqwest.http.Url.query_pairs": {"fullname": "pyreqwest.http.Url.query_pairs", "modulename": "pyreqwest.http", "qualname": "Url.query_pairs", "kind": "variable", "doc": "<p>Parse the URL's query string, if any, as urlencoded and return list of (key, value) pairs.</p>\n", "annotation": ": list[tuple[str, str]]"}, "pyreqwest.http.Url.domain": {"fullname": "pyreqwest.http.Url.domain", "modulename": "pyreqwest.http", "qualname": "Url.domain", "kind": "variable", "doc": "<p>If this URL has a host and it is a domain name (not an IP address), return it. Non-ASCII domains are\npunycode-encoded per IDNA if this is the host of a special URL, or percent encoded for non-special URLs.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.HeaderMap": {"fullname": "pyreqwest.http.HeaderMap", "modulename": "pyreqwest.http", "qualname": "HeaderMap", "kind": "class", "doc": "<p>Case-insensitive multi-value HTTP header map.</p>\n"}, "pyreqwest.http.HeaderMap.__init__": {"fullname": "pyreqwest.http.HeaderMap.__init__", "modulename": "pyreqwest.http", "qualname": "HeaderMap.__init__", "kind": "function", "doc": "<p>Init from: list/tuple of (key,value), dict (single values), HeaderMap, CIMultiDict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pyreqwest.http.HeaderMap.items": {"fullname": "pyreqwest.http.HeaderMap.items", "modulename": "pyreqwest.http", "qualname": "HeaderMap.items", "kind": "function", "doc": "<p>Live view of (key,value) pairs in insertion order.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HeaderMapItemsView</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.keys": {"fullname": "pyreqwest.http.HeaderMap.keys", "modulename": "pyreqwest.http", "qualname": "HeaderMap.keys", "kind": "function", "doc": "<p>Live view of header keys (one per stored value).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HeaderMapKeysView</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.values": {"fullname": "pyreqwest.http.HeaderMap.values", "modulename": "pyreqwest.http", "qualname": "HeaderMap.values", "kind": "function", "doc": "<p>Live view of values in insertion order.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HeaderMapValuesView</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.get": {"fullname": "pyreqwest.http.HeaderMap.get", "modulename": "pyreqwest.http", "qualname": "HeaderMap.get", "kind": "function", "doc": "<p>D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.pop": {"fullname": "pyreqwest.http.HeaderMap.pop", "modulename": "pyreqwest.http", "qualname": "HeaderMap.pop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.popitem": {"fullname": "pyreqwest.http.HeaderMap.popitem", "modulename": "pyreqwest.http", "qualname": "HeaderMap.popitem", "kind": "function", "doc": "<p>Remove &amp; return an arbitrary (key, FIRST value) respecting value ordering; KeyError if empty.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.clear": {"fullname": "pyreqwest.http.HeaderMap.clear", "modulename": "pyreqwest.http", "qualname": "HeaderMap.clear", "kind": "function", "doc": "<p>Empty the map.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.update": {"fullname": "pyreqwest.http.HeaderMap.update", "modulename": "pyreqwest.http", "qualname": "HeaderMap.update", "kind": "function", "doc": "<p>D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.\nIf E present and has a .keys() method, does:     for k in E.keys(): D[k] = E[k]\nIf E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v\nIn either case, this is followed by: for k, v in F.items(): D[k] = v</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"o\">=</span><span class=\"p\">()</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.setdefault": {"fullname": "pyreqwest.http.HeaderMap.setdefault", "modulename": "pyreqwest.http", "qualname": "HeaderMap.setdefault", "kind": "function", "doc": "<p>D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.keys_len": {"fullname": "pyreqwest.http.HeaderMap.keys_len", "modulename": "pyreqwest.http", "qualname": "HeaderMap.keys_len", "kind": "function", "doc": "<p>Count of distinct header keys.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.getall": {"fullname": "pyreqwest.http.HeaderMap.getall", "modulename": "pyreqwest.http", "qualname": "HeaderMap.getall", "kind": "function", "doc": "<p>All values for key. Empty if key does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.insert": {"fullname": "pyreqwest.http.HeaderMap.insert", "modulename": "pyreqwest.http", "qualname": "HeaderMap.insert", "kind": "function", "doc": "<p>Replace all existing values for key with value. Returns list of removed values (may be empty).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">is_sensitive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.append": {"fullname": "pyreqwest.http.HeaderMap.append", "modulename": "pyreqwest.http", "qualname": "HeaderMap.append", "kind": "function", "doc": "<p>Add value for a key. If the map did have this key present, the new value is pushed to the end of the list of\nvalues currently associated with the key. Return True if key already existed, else False.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">is_sensitive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.extend": {"fullname": "pyreqwest.http.HeaderMap.extend", "modulename": "pyreqwest.http", "qualname": "HeaderMap.extend", "kind": "function", "doc": "<p>Append pairs from mapping / iterable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.popall": {"fullname": "pyreqwest.http.HeaderMap.popall", "modulename": "pyreqwest.http", "qualname": "HeaderMap.popall", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.dict_multi_value": {"fullname": "pyreqwest.http.HeaderMap.dict_multi_value", "modulename": "pyreqwest.http", "qualname": "HeaderMap.dict_multi_value", "kind": "function", "doc": "<p>Dict: single-value headers -> str; multi-value -> list[str].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMap.copy": {"fullname": "pyreqwest.http.HeaderMap.copy", "modulename": "pyreqwest.http", "qualname": "HeaderMap.copy", "kind": "function", "doc": "<p>Copy the map.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Mime": {"fullname": "pyreqwest.http.Mime", "modulename": "pyreqwest.http", "qualname": "Mime", "kind": "class", "doc": "<p>Parsed media (MIME) type. Lightweight Python wrapper around the internal Rust mime::Mime type.</p>\n\n<p>See also Rust <a href=\"https://docs.rs/mime/latest/mime/struct.Mime.html\">docs</a> for more details.</p>\n"}, "pyreqwest.http.Mime.parse": {"fullname": "pyreqwest.http.Mime.parse", "modulename": "pyreqwest.http", "qualname": "Mime.parse", "kind": "function", "doc": "<p>Parse a MIME string into a <code>Mime</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mime</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Mime</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Mime.get_param": {"fullname": "pyreqwest.http.Mime.get_param", "modulename": "pyreqwest.http", "qualname": "Mime.get_param", "kind": "function", "doc": "<p>Return first parameter value whose name (case-insensitive) matches, else None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.http.Mime.index": {"fullname": "pyreqwest.http.Mime.index", "modulename": "pyreqwest.http", "qualname": "Mime.index", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.Mime.count": {"fullname": "pyreqwest.http.Mime.count", "modulename": "pyreqwest.http", "qualname": "Mime.count", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.Mime.type_": {"fullname": "pyreqwest.http.Mime.type_", "modulename": "pyreqwest.http", "qualname": "Mime.type_", "kind": "variable", "doc": "<p>Lowercased top-level type (before '/').</p>\n", "annotation": ": str"}, "pyreqwest.http.Mime.parameters": {"fullname": "pyreqwest.http.Mime.parameters", "modulename": "pyreqwest.http", "qualname": "Mime.parameters", "kind": "variable", "doc": "<p>List of (name, value) parameter pairs in original order. Names are lowercase; duplicates kept.</p>\n", "annotation": ": list[tuple[str, str]]"}, "pyreqwest.http.Mime.essence_str": {"fullname": "pyreqwest.http.Mime.essence_str", "modulename": "pyreqwest.http", "qualname": "Mime.essence_str", "kind": "variable", "doc": "<p>type/subtype(+suffix) without parameters (RFC 6838 essence).</p>\n", "annotation": ": str"}, "pyreqwest.http.Mime.subtype": {"fullname": "pyreqwest.http.Mime.subtype", "modulename": "pyreqwest.http", "qualname": "Mime.subtype", "kind": "variable", "doc": "<p>Lowercased subtype (after '/'), excluding any +suffix.</p>\n", "annotation": ": str"}, "pyreqwest.http.Mime.suffix": {"fullname": "pyreqwest.http.Mime.suffix", "modulename": "pyreqwest.http", "qualname": "Mime.suffix", "kind": "variable", "doc": "<p>Structured syntax suffix (text after '+') or None.</p>\n", "annotation": ": str | None"}, "pyreqwest.http.HeaderMapItemsView": {"fullname": "pyreqwest.http.HeaderMapItemsView", "modulename": "pyreqwest.http", "qualname": "HeaderMapItemsView", "kind": "class", "doc": "<p>Live view of (key,value) pairs in insertion order.</p>\n"}, "pyreqwest.http.HeaderMapItemsView.__init__": {"fullname": "pyreqwest.http.HeaderMapItemsView.__init__", "modulename": "pyreqwest.http", "qualname": "HeaderMapItemsView.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mapping</span></span>)</span>"}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"fullname": "pyreqwest.http.HeaderMapItemsView.isdisjoint", "modulename": "pyreqwest.http", "qualname": "HeaderMapItemsView.isdisjoint", "kind": "function", "doc": "<p>Return True if two sets have a null intersection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMapKeysView": {"fullname": "pyreqwest.http.HeaderMapKeysView", "modulename": "pyreqwest.http", "qualname": "HeaderMapKeysView", "kind": "class", "doc": "<p>Live view of header keys (one per stored value).</p>\n"}, "pyreqwest.http.HeaderMapKeysView.__init__": {"fullname": "pyreqwest.http.HeaderMapKeysView.__init__", "modulename": "pyreqwest.http", "qualname": "HeaderMapKeysView.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mapping</span></span>)</span>"}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"fullname": "pyreqwest.http.HeaderMapKeysView.isdisjoint", "modulename": "pyreqwest.http", "qualname": "HeaderMapKeysView.isdisjoint", "kind": "function", "doc": "<p>Return True if two sets have a null intersection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.http.HeaderMapValuesView": {"fullname": "pyreqwest.http.HeaderMapValuesView", "modulename": "pyreqwest.http", "qualname": "HeaderMapValuesView", "kind": "class", "doc": "<p>Live view of values in insertion order.</p>\n"}, "pyreqwest.http.HeaderMapValuesView.__init__": {"fullname": "pyreqwest.http.HeaderMapValuesView.__init__", "modulename": "pyreqwest.http", "qualname": "HeaderMapValuesView.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mapping</span></span>)</span>"}, "pyreqwest.middleware": {"fullname": "pyreqwest.middleware", "modulename": "pyreqwest.middleware", "kind": "module", "doc": "<p>Middleware classes.</p>\n"}, "pyreqwest.middleware.Next": {"fullname": "pyreqwest.middleware.Next", "modulename": "pyreqwest.middleware", "qualname": "Next", "kind": "class", "doc": "<p>Next middleware caller in the chain.</p>\n"}, "pyreqwest.middleware.Next.run": {"fullname": "pyreqwest.middleware.Next.run", "modulename": "pyreqwest.middleware", "qualname": "Next.run", "kind": "function", "doc": "<p>Call the next middleware in the chain with the given request.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.middleware.SyncNext": {"fullname": "pyreqwest.middleware.SyncNext", "modulename": "pyreqwest.middleware", "qualname": "SyncNext", "kind": "class", "doc": "<p>Next middleware caller in the chain.</p>\n"}, "pyreqwest.middleware.SyncNext.run": {"fullname": "pyreqwest.middleware.SyncNext.run", "modulename": "pyreqwest.middleware", "qualname": "SyncNext.run", "kind": "function", "doc": "<p>Call the next middleware in the chain with the given request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">SyncResponse</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart": {"fullname": "pyreqwest.multipart", "modulename": "pyreqwest.multipart", "kind": "module", "doc": "<p>Multipart form data classes.</p>\n"}, "pyreqwest.multipart.FormBuilder": {"fullname": "pyreqwest.multipart.FormBuilder", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder", "kind": "class", "doc": "<p>Build multipart/form-data. Chain calls (text, file, part, encoding) then pass to RequestBuilder.multipart().</p>\n"}, "pyreqwest.multipart.FormBuilder.__init__": {"fullname": "pyreqwest.multipart.FormBuilder.__init__", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.__init__", "kind": "function", "doc": "<p>Creates form builder without any content.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.multipart.FormBuilder.text": {"fullname": "pyreqwest.multipart.FormBuilder.text", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.text", "kind": "function", "doc": "<p>Add a data field with supplied name and value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.file": {"fullname": "pyreqwest.multipart.FormBuilder.file", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.file", "kind": "function", "doc": "<p>Makes a file parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.multipart.FormBuilder.sync_file": {"fullname": "pyreqwest.multipart.FormBuilder.sync_file", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.sync_file", "kind": "function", "doc": "<p>Makes a file parameter. File read is blocking.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.part": {"fullname": "pyreqwest.multipart.FormBuilder.part", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.part", "kind": "function", "doc": "<p>Adds a customized part from PartBuilder.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">part</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"fullname": "pyreqwest.multipart.FormBuilder.percent_encode_path_segment", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.percent_encode_path_segment", "kind": "function", "doc": "<p>Configure this Form to percent-encode using the path-segment rules. This is the default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"fullname": "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.percent_encode_attr_chars", "kind": "function", "doc": "<p>Configure this Form to percent-encode using the attr-char rules.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"fullname": "pyreqwest.multipart.FormBuilder.percent_encode_noop", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.percent_encode_noop", "kind": "function", "doc": "<p>Configure this Form to skip percent-encoding.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.FormBuilder.boundary": {"fullname": "pyreqwest.multipart.FormBuilder.boundary", "modulename": "pyreqwest.multipart", "qualname": "FormBuilder.boundary", "kind": "variable", "doc": "<p>Get the boundary that this form will use.</p>\n", "annotation": ": str"}, "pyreqwest.multipart.PartBuilder": {"fullname": "pyreqwest.multipart.PartBuilder", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder", "kind": "class", "doc": "<p>Build an individual multipart part. Create with from_* then optionally set mime, filename, headers.\nAdd via FormBuilder.part().</p>\n"}, "pyreqwest.multipart.PartBuilder.from_text": {"fullname": "pyreqwest.multipart.PartBuilder.from_text", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_text", "kind": "function", "doc": "<p>Makes a text parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.from_bytes": {"fullname": "pyreqwest.multipart.PartBuilder.from_bytes", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_bytes", "kind": "function", "doc": "<p>Makes a new parameter from arbitrary bytes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.from_stream": {"fullname": "pyreqwest.multipart.PartBuilder.from_stream", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_stream", "kind": "function", "doc": "<p>Makes a new parameter from an arbitrary stream.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"fullname": "pyreqwest.multipart.PartBuilder.from_stream_with_length", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_stream_with_length", "kind": "function", "doc": "<p>Makes a new parameter from an arbitrary stream with a known length. This is particularly useful when adding\nsomething like file contents as a stream, where you can know the content length beforehand.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.from_file": {"fullname": "pyreqwest.multipart.PartBuilder.from_file", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_file", "kind": "function", "doc": "<p>Makes a file parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"fullname": "pyreqwest.multipart.PartBuilder.from_sync_file", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.from_sync_file", "kind": "function", "doc": "<p>Makes a file parameter. File read is blocking.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">PartBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.mime": {"fullname": "pyreqwest.multipart.PartBuilder.mime", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.mime", "kind": "function", "doc": "<p>Set the mime of this part.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mime</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Mime</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.file_name": {"fullname": "pyreqwest.multipart.PartBuilder.file_name", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.file_name", "kind": "function", "doc": "<p>Set the filename.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.multipart.PartBuilder.headers": {"fullname": "pyreqwest.multipart.PartBuilder.headers", "modulename": "pyreqwest.multipart", "qualname": "PartBuilder.headers", "kind": "function", "doc": "<p>Sets custom headers for the part.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy": {"fullname": "pyreqwest.proxy", "modulename": "pyreqwest.proxy", "kind": "module", "doc": "<p>Proxy classes.</p>\n"}, "pyreqwest.proxy.ProxyBuilder": {"fullname": "pyreqwest.proxy.ProxyBuilder", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder", "kind": "class", "doc": "<p>Configuration of a proxy that a Client should pass requests to.</p>\n\n<p>The resulting instance is passed to <code>ClientBuilder.proxy(...)</code>.\nBased on reqwest's <code>Proxy</code> type.\nSee also Rust <a href=\"https://docs.rs/reqwest/latest/reqwest/struct.Proxy.html\">docs</a> for more details.</p>\n"}, "pyreqwest.proxy.ProxyBuilder.http": {"fullname": "pyreqwest.proxy.ProxyBuilder.http", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.http", "kind": "function", "doc": "<p>Proxy all HTTP traffic to the passed URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">ProxyBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.https": {"fullname": "pyreqwest.proxy.ProxyBuilder.https", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.https", "kind": "function", "doc": "<p>Proxy all HTTPS traffic to the passed URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">ProxyBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.all": {"fullname": "pyreqwest.proxy.ProxyBuilder.all", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.all", "kind": "function", "doc": "<p>Proxy all traffic to the passed URL.</p>\n\n<p>\"All\" refers to https and http URLs. Other schemes are not recognized.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">ProxyBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.custom": {"fullname": "pyreqwest.proxy.ProxyBuilder.custom", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.custom", "kind": "function", "doc": "<p>Provide a custom function to determine what traffic to proxy to where.</p>\n\n<p>Any exception raised or an invalid/relative return value surfaces as a <code>RequestPanicError</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">ProxyBuilder</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"fullname": "pyreqwest.proxy.ProxyBuilder.basic_auth", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.basic_auth", "kind": "function", "doc": "<p>Set the Proxy-Authorization header using Basic auth.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"fullname": "pyreqwest.proxy.ProxyBuilder.custom_http_auth", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.custom_http_auth", "kind": "function", "doc": "<p>Set the Proxy-Authorization header to a specified value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">header_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.headers": {"fullname": "pyreqwest.proxy.ProxyBuilder.headers", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.headers", "kind": "function", "doc": "<p>Add custom headers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"fullname": "pyreqwest.proxy.ProxyBuilder.no_proxy", "modulename": "pyreqwest.proxy", "qualname": "ProxyBuilder.no_proxy", "kind": "function", "doc": "<p>Adds a No Proxy exclusion list to this proxy.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">no_proxy_list</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin": {"fullname": "pyreqwest.pytest_plugin", "modulename": "pyreqwest.pytest_plugin", "kind": "module", "doc": "<p>PyReqwest pytest plugin for HTTP client mocking.</p>\n"}, "pyreqwest.pytest_plugin.client_mocker": {"fullname": "pyreqwest.pytest_plugin.client_mocker", "modulename": "pyreqwest.pytest_plugin", "qualname": "client_mocker", "kind": "function", "doc": "<p>Fixture that provides a ClientMocker for mocking HTTP requests in tests.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">monkeypatch</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">monkeypatch</span><span class=\"o\">.</span><span class=\"n\">MonkeyPatch</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">ClientMocker</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker": {"fullname": "pyreqwest.pytest_plugin.ClientMocker", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker", "kind": "class", "doc": "<p>Main class for mocking HTTP requests.</p>\n"}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.__init__", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.__init__", "kind": "function", "doc": "<p>Do not initialize ClientMocker directly.\nInstead, use the <code>client_mocker</code> fixture or <code>ClientMocker.create_mocker</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.create_mocker", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.create_mocker", "kind": "function", "doc": "<p>Create a ClientMocker for mocking HTTP requests in tests.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">monkeypatch</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">monkeypatch</span><span class=\"o\">.</span><span class=\"n\">MonkeyPatch</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">ClientMocker</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.mock", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.mock", "kind": "function", "doc": "<p>Add a mock rule for method and path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.get": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.get", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.get", "kind": "function", "doc": "<p>Mock GET requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.post": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.post", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.post", "kind": "function", "doc": "<p>Mock POST requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.put": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.put", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.put", "kind": "function", "doc": "<p>Mock PUT requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.patch", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.patch", "kind": "function", "doc": "<p>Mock PATCH requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.delete", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.delete", "kind": "function", "doc": "<p>Mock DELETE requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.head": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.head", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.head", "kind": "function", "doc": "<p>Mock HEAD requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.options": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.options", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.options", "kind": "function", "doc": "<p>Mock OPTIONS requests to the given path or URL.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">pytest_plugin</span><span class=\"o\">.</span><span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">Mock</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.strict", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.strict", "kind": "function", "doc": "<p>Enable strict mode - unmatched requests will raise an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.get_requests", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.get_requests", "kind": "function", "doc": "<p>Get all captured requests in all mocks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.get_call_count", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.get_call_count", "kind": "function", "doc": "<p>Get the total number of calls in all mocks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.clear", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.clear", "kind": "function", "doc": "<p>Remove all mocks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"fullname": "pyreqwest.pytest_plugin.ClientMocker.reset_requests", "modulename": "pyreqwest.pytest_plugin", "qualname": "ClientMocker.reset_requests", "kind": "function", "doc": "<p>Reset all captured requests in all mocks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock": {"fullname": "pyreqwest.pytest_plugin.Mock", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock", "kind": "class", "doc": "<p>Class representing a single mock rule.</p>\n"}, "pyreqwest.pytest_plugin.Mock.__init__": {"fullname": "pyreqwest.pytest_plugin.Mock.__init__", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.__init__", "kind": "function", "doc": "<p>Do not use directly. Instead, use ClientMocker.mock().</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pyreqwest.pytest_plugin.Mock.assert_called": {"fullname": "pyreqwest.pytest_plugin.Mock.assert_called", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.assert_called", "kind": "function", "doc": "<p>Assert that this mock was called the expected number of times. By default, exactly once.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.get_requests": {"fullname": "pyreqwest.pytest_plugin.Mock.get_requests", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.get_requests", "kind": "function", "doc": "<p>Get all captured requests by this mock.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"fullname": "pyreqwest.pytest_plugin.Mock.get_call_count", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.get_call_count", "kind": "function", "doc": "<p>Get the total number of calls to this mock.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"fullname": "pyreqwest.pytest_plugin.Mock.reset_requests", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.reset_requests", "kind": "function", "doc": "<p>Reset all captured requests for this mock.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_query": {"fullname": "pyreqwest.pytest_plugin.Mock.match_query", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_query", "kind": "function", "doc": "<p>Set a matcher to match the entire query string or query parameters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]],</span> <span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"fullname": "pyreqwest.pytest_plugin.Mock.match_query_param", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_query_param", "kind": "function", "doc": "<p>Set a matcher to match a specific query parameter.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_header": {"fullname": "pyreqwest.pytest_plugin.Mock.match_header", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_header", "kind": "function", "doc": "<p>Set a matcher to match a specific request header.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_body": {"fullname": "pyreqwest.pytest_plugin.Mock.match_body", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_body", "kind": "function", "doc": "<p>Set a matcher to match request bodies as raw content (text or bytes).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">matcher</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">Pattern</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"fullname": "pyreqwest.pytest_plugin.Mock.match_body_json", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_body_json", "kind": "function", "doc": "<p>Set a matcher to match JSON request bodies.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">matcher</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dirty_equals</span><span class=\"o\">.</span><span class=\"n\">_base</span><span class=\"o\">.</span><span class=\"n\">DirtyEquals</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_request": {"fullname": "pyreqwest.pytest_plugin.Mock.match_request", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_request", "kind": "function", "doc": "<p>Set a custom matcher to match requests.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">matcher</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"fullname": "pyreqwest.pytest_plugin.Mock.match_request_with_response", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.match_request_with_response", "kind": "function", "doc": "<p>Set a custom handler to generate the response for matched requests.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">SyncResponse</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_status": {"fullname": "pyreqwest.pytest_plugin.Mock.with_status", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_status", "kind": "function", "doc": "<p>Set the mocked response status code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_header": {"fullname": "pyreqwest.pytest_plugin.Mock.with_header", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_header", "kind": "function", "doc": "<p>Add a header to the mocked response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"fullname": "pyreqwest.pytest_plugin.Mock.with_body_bytes", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_body_bytes", "kind": "function", "doc": "<p>Set the mocked response body to the given bytes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"fullname": "pyreqwest.pytest_plugin.Mock.with_body_text", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_body_text", "kind": "function", "doc": "<p>Set the mocked response body to the given text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"fullname": "pyreqwest.pytest_plugin.Mock.with_body_json", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_body_json", "kind": "function", "doc": "<p>Set the mocked response body to the given JSON-serializable object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">json_body</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.pytest_plugin.Mock.with_version": {"fullname": "pyreqwest.pytest_plugin.Mock.with_version", "modulename": "pyreqwest.pytest_plugin", "qualname": "Mock.with_version", "kind": "function", "doc": "<p>Set the mocked response HTTP version.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request": {"fullname": "pyreqwest.request", "modulename": "pyreqwest.request", "kind": "module", "doc": "<p>Requests classes and builders.</p>\n"}, "pyreqwest.request.ConsumedRequest": {"fullname": "pyreqwest.request.ConsumedRequest", "modulename": "pyreqwest.request", "qualname": "ConsumedRequest", "kind": "class", "doc": "<p>Request that will fully read the response body when sent.</p>\n", "bases": "Request"}, "pyreqwest.request.ConsumedRequest.send": {"fullname": "pyreqwest.request.ConsumedRequest.send", "modulename": "pyreqwest.request", "qualname": "ConsumedRequest.send", "kind": "function", "doc": "<p>Execute the request returning a Response with fully read response body.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"fullname": "pyreqwest.request.ConsumedRequest.from_request_and_body", "modulename": "pyreqwest.request", "qualname": "ConsumedRequest.from_request_and_body", "kind": "function", "doc": "<p>Clone request with a new body instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.StreamRequest": {"fullname": "pyreqwest.request.StreamRequest", "modulename": "pyreqwest.request", "qualname": "StreamRequest", "kind": "class", "doc": "<p>Request whose response body is streamed.</p>\n", "bases": "Request"}, "pyreqwest.request.StreamRequest.from_request_and_body": {"fullname": "pyreqwest.request.StreamRequest.from_request_and_body", "modulename": "pyreqwest.request", "qualname": "StreamRequest.from_request_and_body", "kind": "function", "doc": "<p>Clone request with a new body instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.SyncConsumedRequest": {"fullname": "pyreqwest.request.SyncConsumedRequest", "modulename": "pyreqwest.request", "qualname": "SyncConsumedRequest", "kind": "class", "doc": "<p>Synchronous request that will fully read the response body when sent.</p>\n", "bases": "Request"}, "pyreqwest.request.SyncConsumedRequest.send": {"fullname": "pyreqwest.request.SyncConsumedRequest.send", "modulename": "pyreqwest.request", "qualname": "SyncConsumedRequest.send", "kind": "function", "doc": "<p>Execute the request returning a Response with fully read response body.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">SyncResponse</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"fullname": "pyreqwest.request.SyncConsumedRequest.from_request_and_body", "modulename": "pyreqwest.request", "qualname": "SyncConsumedRequest.from_request_and_body", "kind": "function", "doc": "<p>Clone request with a new body instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.SyncStreamRequest": {"fullname": "pyreqwest.request.SyncStreamRequest", "modulename": "pyreqwest.request", "qualname": "SyncStreamRequest", "kind": "class", "doc": "<p>Synchronous request whose response body is streamed.</p>\n", "bases": "Request"}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"fullname": "pyreqwest.request.SyncStreamRequest.from_request_and_body", "modulename": "pyreqwest.request", "qualname": "SyncStreamRequest.from_request_and_body", "kind": "function", "doc": "<p>Clone request with a new body instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.Request": {"fullname": "pyreqwest.request.Request", "modulename": "pyreqwest.request", "qualname": "Request", "kind": "class", "doc": "<p></p>\n"}, "pyreqwest.request.Request.copy": {"fullname": "pyreqwest.request.Request.copy", "modulename": "pyreqwest.request", "qualname": "Request.copy", "kind": "function", "doc": "<p>Copy the request. Byte-bodies are zero-copied. Stream bodies are re-created via their own copy logic.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.Request.repr_full": {"fullname": "pyreqwest.request.Request.repr_full", "modulename": "pyreqwest.request", "qualname": "Request.repr_full", "kind": "function", "doc": "<p>Verbose repr including non-sensitive headers and body summary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.Request.from_request_and_body": {"fullname": "pyreqwest.request.Request.from_request_and_body", "modulename": "pyreqwest.request", "qualname": "Request.from_request_and_body", "kind": "function", "doc": "<p>Clone request with a new body instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.Request.headers": {"fullname": "pyreqwest.request.Request.headers", "modulename": "pyreqwest.request", "qualname": "Request.headers", "kind": "variable", "doc": "<p>Get the headers. This is not a copy. Modifying it modifies the request.</p>\n", "annotation": ": pyreqwest.http.HeaderMap"}, "pyreqwest.request.Request.body": {"fullname": "pyreqwest.request.Request.body", "modulename": "pyreqwest.request", "qualname": "Request.body", "kind": "variable", "doc": "<p>Get the body.</p>\n", "annotation": ": pyreqwest.request.RequestBody | None"}, "pyreqwest.request.Request.extensions": {"fullname": "pyreqwest.request.Request.extensions", "modulename": "pyreqwest.request", "qualname": "Request.extensions", "kind": "variable", "doc": "<p>Arbitrary per-request data storage. Useful for passing through data to middleware and response.</p>\n", "annotation": ": dict[str, typing.Any]"}, "pyreqwest.request.Request.method": {"fullname": "pyreqwest.request.Request.method", "modulename": "pyreqwest.request", "qualname": "Request.method", "kind": "variable", "doc": "<p>Get the HTTP method. (e.g. GET, POST).</p>\n", "annotation": ": str"}, "pyreqwest.request.Request.read_buffer_limit": {"fullname": "pyreqwest.request.Request.read_buffer_limit", "modulename": "pyreqwest.request", "qualname": "Request.read_buffer_limit", "kind": "variable", "doc": "<p></p>\n"}, "pyreqwest.request.Request.url": {"fullname": "pyreqwest.request.Request.url", "modulename": "pyreqwest.request", "qualname": "Request.url", "kind": "variable", "doc": "<p>Get the url.</p>\n", "annotation": ": pyreqwest.http.Url"}, "pyreqwest.request.RequestBuilder": {"fullname": "pyreqwest.request.RequestBuilder", "modulename": "pyreqwest.request", "qualname": "RequestBuilder", "kind": "class", "doc": "<p>Request builder. Use <code>build()</code> or <code>build_streamed()</code> to create the request to send.</p>\n", "bases": "BaseRequestBuilder"}, "pyreqwest.request.RequestBuilder.build": {"fullname": "pyreqwest.request.RequestBuilder.build", "modulename": "pyreqwest.request", "qualname": "RequestBuilder.build", "kind": "function", "doc": "<p>Build request that full reads the response body on send().</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">ConsumedRequest</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBuilder.build_streamed": {"fullname": "pyreqwest.request.RequestBuilder.build_streamed", "modulename": "pyreqwest.request", "qualname": "RequestBuilder.build_streamed", "kind": "function", "doc": "<p>Build request whose response body is streamed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">StreamRequest</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.SyncRequestBuilder": {"fullname": "pyreqwest.request.SyncRequestBuilder", "modulename": "pyreqwest.request", "qualname": "SyncRequestBuilder", "kind": "class", "doc": "<p>Synchronous request builder. Use <code>build()</code> or <code>build_streamed()</code> to create the request to send.</p>\n", "bases": "BaseRequestBuilder"}, "pyreqwest.request.SyncRequestBuilder.build": {"fullname": "pyreqwest.request.SyncRequestBuilder.build", "modulename": "pyreqwest.request", "qualname": "SyncRequestBuilder.build", "kind": "function", "doc": "<p>Build request that full reads the response body on send().</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncConsumedRequest</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"fullname": "pyreqwest.request.SyncRequestBuilder.build_streamed", "modulename": "pyreqwest.request", "qualname": "SyncRequestBuilder.build_streamed", "kind": "function", "doc": "<p>Build request whose response body is streamed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">SyncStreamRequest</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder": {"fullname": "pyreqwest.request.BaseRequestBuilder", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder", "kind": "class", "doc": "<p></p>\n"}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"fullname": "pyreqwest.request.BaseRequestBuilder.error_for_status", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.error_for_status", "kind": "function", "doc": "<p>Enable automatic HTTP error raising (4xx/5xx).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.header": {"fullname": "pyreqwest.request.BaseRequestBuilder.header", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.header", "kind": "function", "doc": "<p>Append single header value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.headers": {"fullname": "pyreqwest.request.BaseRequestBuilder.headers", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.headers", "kind": "function", "doc": "<p>Merge multiple headers (mapping or sequence).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"fullname": "pyreqwest.request.BaseRequestBuilder.basic_auth", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.basic_auth", "kind": "function", "doc": "<p>Add Basic Authorization header.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"fullname": "pyreqwest.request.BaseRequestBuilder.bearer_auth", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.bearer_auth", "kind": "function", "doc": "<p>Add Bearer token Authorization header.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"fullname": "pyreqwest.request.BaseRequestBuilder.body_bytes", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.body_bytes", "kind": "function", "doc": "<p>Set body from raw bytes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.body_text": {"fullname": "pyreqwest.request.BaseRequestBuilder.body_text", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.body_text", "kind": "function", "doc": "<p>Set body from text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.body_json": {"fullname": "pyreqwest.request.BaseRequestBuilder.body_json", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.body_json", "kind": "function", "doc": "<p>Serialize body as JSON. Sets Content-Type header.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"fullname": "pyreqwest.request.BaseRequestBuilder.body_stream", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.body_stream", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">stream</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.query": {"fullname": "pyreqwest.request.BaseRequestBuilder.query", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.query", "kind": "function", "doc": "<p>Add/merge query parameters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.timeout": {"fullname": "pyreqwest.request.BaseRequestBuilder.timeout", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.timeout", "kind": "function", "doc": "<p>Set per-request total timeout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.multipart": {"fullname": "pyreqwest.request.BaseRequestBuilder.multipart", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.multipart", "kind": "function", "doc": "<p>Attach multipart form body builder.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">multipart</span><span class=\"p\">:</span> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">FormBuilder</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.form": {"fullname": "pyreqwest.request.BaseRequestBuilder.form", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.form", "kind": "function", "doc": "<p>Set application/x-www-form-urlencoded body.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">form</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.extensions": {"fullname": "pyreqwest.request.BaseRequestBuilder.extensions", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.extensions", "kind": "function", "doc": "<p>Arbitrary per-request data storage. Useful for passing through data to middleware and response.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">extensions</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"fullname": "pyreqwest.request.BaseRequestBuilder.with_middleware", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.with_middleware", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">middleware</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"fullname": "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.streamed_read_buffer_limit", "kind": "function", "doc": "<p>Max bytes buffered when reading streamed body.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"fullname": "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit", "modulename": "pyreqwest.request", "qualname": "BaseRequestBuilder.default_streamed_read_buffer_limit", "kind": "function", "doc": "<p>Default max bytes buffered when reading streamed body.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBody": {"fullname": "pyreqwest.request.RequestBody", "modulename": "pyreqwest.request", "qualname": "RequestBody", "kind": "class", "doc": "<p>Represents request body content (bytes, text, or async stream). Bodies are single-use.</p>\n"}, "pyreqwest.request.RequestBody.from_text": {"fullname": "pyreqwest.request.RequestBody.from_text", "modulename": "pyreqwest.request", "qualname": "RequestBody.from_text", "kind": "function", "doc": "<p>Create body from text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBody.from_bytes": {"fullname": "pyreqwest.request.RequestBody.from_bytes", "modulename": "pyreqwest.request", "qualname": "RequestBody.from_bytes", "kind": "function", "doc": "<p>Create body from raw bytes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBody.from_stream": {"fullname": "pyreqwest.request.RequestBody.from_stream", "modulename": "pyreqwest.request", "qualname": "RequestBody.from_stream", "kind": "function", "doc": "<p>Create body from async byte stream.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestBody</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBody.copy_bytes": {"fullname": "pyreqwest.request.RequestBody.copy_bytes", "modulename": "pyreqwest.request", "qualname": "RequestBody.copy_bytes", "kind": "function", "doc": "<p>Return bytes zero-copy. None for stream.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.request.RequestBody.get_stream": {"fullname": "pyreqwest.request.RequestBody.get_stream", "modulename": "pyreqwest.request", "qualname": "RequestBody.get_stream", "kind": "function", "doc": "<p>Return underlying stream if streaming body else None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response": {"fullname": "pyreqwest.response", "modulename": "pyreqwest.response", "kind": "module", "doc": "<p>Response classes and builders.</p>\n"}, "pyreqwest.response.Response": {"fullname": "pyreqwest.response.Response", "modulename": "pyreqwest.response", "qualname": "Response", "kind": "class", "doc": "<p>Asynchronous response with optionally streamed body.</p>\n", "bases": "BaseResponse"}, "pyreqwest.response.Response.body_reader": {"fullname": "pyreqwest.response.Response.body_reader", "modulename": "pyreqwest.response", "qualname": "Response.body_reader", "kind": "variable", "doc": "<p>Access streaming reader. Using bytes(), json() or text() is not allowed after reading body partially.</p>\n", "annotation": ": pyreqwest.response.ResponseBodyReader"}, "pyreqwest.response.SyncResponse": {"fullname": "pyreqwest.response.SyncResponse", "modulename": "pyreqwest.response", "qualname": "SyncResponse", "kind": "class", "doc": "<p>Synchronous response variant.</p>\n", "bases": "BaseResponse"}, "pyreqwest.response.SyncResponse.bytes": {"fullname": "pyreqwest.response.SyncResponse.bytes", "modulename": "pyreqwest.response", "qualname": "SyncResponse.bytes", "kind": "function", "doc": "<p>Return entire body as bytes (cached after first read).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Bytes</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.SyncResponse.json": {"fullname": "pyreqwest.response.SyncResponse.json", "modulename": "pyreqwest.response", "qualname": "SyncResponse.json", "kind": "function", "doc": "<p>Decode body as JSON (underlying bytes cached after first read). Uses serde for decoding.\nUser can provide custom deserializer via <code>SyncClientBuilder.json_handler</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.SyncResponse.text": {"fullname": "pyreqwest.response.SyncResponse.text", "modulename": "pyreqwest.response", "qualname": "SyncResponse.text", "kind": "function", "doc": "<p>Decode body to text (underlying bytes cached after first read). Uses charset from Content-Type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.SyncResponse.body_reader": {"fullname": "pyreqwest.response.SyncResponse.body_reader", "modulename": "pyreqwest.response", "qualname": "SyncResponse.body_reader", "kind": "variable", "doc": "<p>Access streaming reader. Using bytes(), json() or text() is not allowed after reading body partially.</p>\n", "annotation": ": pyreqwest.response.SyncResponseBodyReader"}, "pyreqwest.response.BaseResponse": {"fullname": "pyreqwest.response.BaseResponse", "modulename": "pyreqwest.response", "qualname": "BaseResponse", "kind": "class", "doc": "<p></p>\n"}, "pyreqwest.response.BaseResponse.error_for_status": {"fullname": "pyreqwest.response.BaseResponse.error_for_status", "modulename": "pyreqwest.response", "qualname": "BaseResponse.error_for_status", "kind": "function", "doc": "<p>Raise StatusError for 4xx/5xx.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.get_header": {"fullname": "pyreqwest.response.BaseResponse.get_header", "modulename": "pyreqwest.response", "qualname": "BaseResponse.get_header", "kind": "function", "doc": "<p>Return first matching header value else None (case-insensitive).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.get_header_all": {"fullname": "pyreqwest.response.BaseResponse.get_header_all", "modulename": "pyreqwest.response", "qualname": "BaseResponse.get_header_all", "kind": "function", "doc": "<p>Return all values for header name (case-insensitive). Empty if absent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.content_type_mime": {"fullname": "pyreqwest.response.BaseResponse.content_type_mime", "modulename": "pyreqwest.response", "qualname": "BaseResponse.content_type_mime", "kind": "function", "doc": "<p>Parsed Content-Type header as Mime or None if absent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Mime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.bytes": {"fullname": "pyreqwest.response.BaseResponse.bytes", "modulename": "pyreqwest.response", "qualname": "BaseResponse.bytes", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.json": {"fullname": "pyreqwest.response.BaseResponse.json", "modulename": "pyreqwest.response", "qualname": "BaseResponse.json", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.text": {"fullname": "pyreqwest.response.BaseResponse.text", "modulename": "pyreqwest.response", "qualname": "BaseResponse.text", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyreqwest.response.BaseResponse.headers": {"fullname": "pyreqwest.response.BaseResponse.headers", "modulename": "pyreqwest.response", "qualname": "BaseResponse.headers", "kind": "variable", "doc": "<p>Get the headers. This is not a copy. Modifying it modifies the response.\nYou can also use <code>get_header</code> or <code>get_header_all</code> to access headers.</p>\n", "annotation": ": pyreqwest.http.HeaderMap"}, "pyreqwest.response.BaseResponse.version": {"fullname": "pyreqwest.response.BaseResponse.version", "modulename": "pyreqwest.response", "qualname": "BaseResponse.version", "kind": "variable", "doc": "<p>Used HTTP version (e.g. 'HTTP/1.1', 'HTTP/2.0').</p>\n", "annotation": ": str"}, "pyreqwest.response.BaseResponse.extensions": {"fullname": "pyreqwest.response.BaseResponse.extensions", "modulename": "pyreqwest.response", "qualname": "BaseResponse.extensions", "kind": "variable", "doc": "<p>Arbitrary per-request data storage. This is the data that was passed via request and middlewares.\nThis is not a copy. Modifying it modifies the response.</p>\n", "annotation": ": dict[str, typing.Any]"}, "pyreqwest.response.BaseResponse.status": {"fullname": "pyreqwest.response.BaseResponse.status", "modulename": "pyreqwest.response", "qualname": "BaseResponse.status", "kind": "variable", "doc": "<p>HTTP status code (e.g. 200, 404).</p>\n", "annotation": ": int"}, "pyreqwest.response.ResponseBuilder": {"fullname": "pyreqwest.response.ResponseBuilder", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder", "kind": "class", "doc": "<p>Programmatic response construction (for testing, middlewares, manual responses).</p>\n"}, "pyreqwest.response.ResponseBuilder.__init__": {"fullname": "pyreqwest.response.ResponseBuilder.__init__", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.__init__", "kind": "function", "doc": "<p>Create empty response builder (defaults: 200, HTTP/1.1, empty headers/body).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "pyreqwest.response.ResponseBuilder.status": {"fullname": "pyreqwest.response.ResponseBuilder.status", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.status", "kind": "function", "doc": "<p>Set status code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.version": {"fullname": "pyreqwest.response.ResponseBuilder.version", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.version", "kind": "function", "doc": "<p>Set HTTP version string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.header": {"fullname": "pyreqwest.response.ResponseBuilder.header", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.header", "kind": "function", "doc": "<p>Append single header value (multiple allowed).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.headers": {"fullname": "pyreqwest.response.ResponseBuilder.headers", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.headers", "kind": "function", "doc": "<p>Merge multiple headers (mapping or sequence).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.extensions": {"fullname": "pyreqwest.response.ResponseBuilder.extensions", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.extensions", "kind": "function", "doc": "<p>Set extensions.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">extensions</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.body_bytes": {"fullname": "pyreqwest.response.ResponseBuilder.body_bytes", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.body_bytes", "kind": "function", "doc": "<p>Set fixed byte body (zero-copied where possible).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span> <span class=\"o\">|</span> <span class=\"nb\">memoryview</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.body_text": {"fullname": "pyreqwest.response.ResponseBuilder.body_text", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.body_text", "kind": "function", "doc": "<p>Set text body (UTF-8 encoded).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.body_json": {"fullname": "pyreqwest.response.ResponseBuilder.body_json", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.body_json", "kind": "function", "doc": "<p>Serialize body to JSON (sets Content-Type). Uses serde for serialization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.body_stream": {"fullname": "pyreqwest.response.ResponseBuilder.body_stream", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.body_stream", "kind": "function", "doc": "<p>Set streaming body. <code>build_sync</code> can not be mixed with async streams.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">bytearray</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">memoryview</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.build": {"fullname": "pyreqwest.response.ResponseBuilder.build", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.build", "kind": "function", "doc": "<p>Build asynchronous response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "pyreqwest.response.ResponseBuilder.build_sync": {"fullname": "pyreqwest.response.ResponseBuilder.build_sync", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.build_sync", "kind": "function", "doc": "<p>Build synchronous response (disallows async streams).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">SyncResponse</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBuilder.copy": {"fullname": "pyreqwest.response.ResponseBuilder.copy", "modulename": "pyreqwest.response", "qualname": "ResponseBuilder.copy", "kind": "function", "doc": "<p>Copy builder.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.ResponseBodyReader": {"fullname": "pyreqwest.response.ResponseBodyReader", "modulename": "pyreqwest.response", "qualname": "ResponseBodyReader", "kind": "class", "doc": "<p>Streaming body reader.</p>\n", "bases": "builtins.BaseResponseBodyReader"}, "pyreqwest.response.SyncResponseBodyReader": {"fullname": "pyreqwest.response.SyncResponseBodyReader", "modulename": "pyreqwest.response", "qualname": "SyncResponseBodyReader", "kind": "class", "doc": "<p>Streaming body reader.</p>\n", "bases": "builtins.BaseResponseBodyReader"}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"fullname": "pyreqwest.response.SyncResponseBodyReader.bytes", "modulename": "pyreqwest.response", "qualname": "SyncResponseBodyReader.bytes", "kind": "function", "doc": "<p>Read remaining stream fully and return bytes (caches).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Bytes</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.SyncResponseBodyReader.read": {"fullname": "pyreqwest.response.SyncResponseBodyReader.read", "modulename": "pyreqwest.response", "qualname": "SyncResponseBodyReader.read", "kind": "function", "doc": "<p>Read up to amount bytes (or default chunk size) from stream. None when stream is exhausted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"fullname": "pyreqwest.response.SyncResponseBodyReader.read_chunk", "modulename": "pyreqwest.response", "qualname": "SyncResponseBodyReader.read_chunk", "kind": "function", "doc": "<p>Return next raw chunk. Sizes are arbitrary and depend on OS. None when stream is exhausted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyreqwest</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">Bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "pyreqwest.types": {"fullname": "pyreqwest.types", "modulename": "pyreqwest.types", "kind": "module", "doc": "<p>Common types and interfaces used in the library.</p>\n"}, "pyreqwest.types.HeadersType": {"fullname": "pyreqwest.types.HeadersType", "modulename": "pyreqwest.types", "qualname": "HeadersType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Mapping[str, str] | Sequence[tuple[str, str]]"}, "pyreqwest.types.QueryParams": {"fullname": "pyreqwest.types.QueryParams", "modulename": "pyreqwest.types", "qualname": "QueryParams", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Mapping[str, typing.Any] | Sequence[tuple[str, typing.Any]]"}, "pyreqwest.types.FormParams": {"fullname": "pyreqwest.types.FormParams", "modulename": "pyreqwest.types", "qualname": "FormParams", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Mapping[str, typing.Any] | Sequence[tuple[str, typing.Any]]"}, "pyreqwest.types.ExtensionsType": {"fullname": "pyreqwest.types.ExtensionsType", "modulename": "pyreqwest.types", "qualname": "ExtensionsType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Mapping[str, typing.Any] | Sequence[tuple[str, typing.Any]]"}, "pyreqwest.types.SyncStream": {"fullname": "pyreqwest.types.SyncStream", "modulename": "pyreqwest.types", "qualname": "SyncStream", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Iterable[bytes] | Iterable[bytearray] | Iterable[memoryview]"}, "pyreqwest.types.Stream": {"fullname": "pyreqwest.types.Stream", "modulename": "pyreqwest.types", "qualname": "Stream", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "AsyncIterable[bytes] | AsyncIterable[bytearray] | AsyncIterable[memoryview] | Iterable[bytes] | Iterable[bytearray] | Iterable[memoryview]"}}, "docInfo": {"pyreqwest.client.types": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "pyreqwest.client.types.JsonDumpsContext": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 7}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pyreqwest.client.types.JsonDumpsContext.data": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.client.types.JsonLoadsContext": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 7}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.client.types.JsonLoadsContext.headers": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.client.types.SyncJsonLoadsContext": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.client.types.JsonDumps": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.client.types.JsonLoads": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.client.types.SyncJsonLoads": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.client.types.TlsVersion": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 711}, "pyreqwest.bytes": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyreqwest.bytes.Bytes": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 97}, "pyreqwest.bytes.Bytes.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 23}, "pyreqwest.bytes.Bytes.removeprefix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "pyreqwest.bytes.Bytes.removesuffix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 31}, "pyreqwest.bytes.Bytes.isalnum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 64}, "pyreqwest.bytes.Bytes.isalpha": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 45}, "pyreqwest.bytes.Bytes.isascii": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 37}, "pyreqwest.bytes.Bytes.isdigit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 45}, "pyreqwest.bytes.Bytes.islower": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "pyreqwest.bytes.Bytes.isspace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 53}, "pyreqwest.bytes.Bytes.isupper": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "pyreqwest.bytes.Bytes.lower": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "pyreqwest.bytes.Bytes.upper": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "pyreqwest.bytes.Bytes.to_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 15}, "pyreqwest.client": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "pyreqwest.client.Client": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 42}, "pyreqwest.client.Client.request": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 30}, "pyreqwest.client.Client.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.post": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.put": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.patch": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.delete": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.head": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 11}, "pyreqwest.client.Client.__aenter__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "pyreqwest.client.Client.__aexit__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 6}, "pyreqwest.client.Client.close": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.client.ClientBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 39}, "pyreqwest.client.ClientBuilder.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "pyreqwest.client.ClientBuilder.build": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 28}, "pyreqwest.client.ClientBuilder.with_middleware": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 11}, "pyreqwest.client.ClientBuilder.json_handler": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 144, "bases": 0, "doc": 12}, "pyreqwest.client.SyncClient": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 41}, "pyreqwest.client.SyncClient.request": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 30}, "pyreqwest.client.SyncClient.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.post": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.put": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.patch": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.delete": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.head": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClient.__enter__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.client.SyncClient.__exit__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 10}, "pyreqwest.client.SyncClient.close": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.client.SyncClientBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 41}, "pyreqwest.client.SyncClientBuilder.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "pyreqwest.client.SyncClientBuilder.build": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 28}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 11}, "pyreqwest.client.SyncClientBuilder.json_handler": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 13}, "pyreqwest.client.BaseClient": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.client.BaseClientBuilder.base_url": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 13}, "pyreqwest.client.BaseClientBuilder.runtime": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 19}, "pyreqwest.client.BaseClientBuilder.max_connections": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 15}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.client.BaseClientBuilder.user_agent": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 24}, "pyreqwest.client.BaseClientBuilder.default_headers": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 12}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 20}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 16}, "pyreqwest.client.BaseClientBuilder.gzip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.brotli": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.zstd": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.deflate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 19}, "pyreqwest.client.BaseClientBuilder.referer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 15}, "pyreqwest.client.BaseClientBuilder.proxy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 18}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 13}, "pyreqwest.client.BaseClientBuilder.timeout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 36}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 42}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 17}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 17}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 14}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"qualname": 8, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 27}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 15}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"qualname": 9, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "pyreqwest.client.BaseClientBuilder.http1_only": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 19}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 16}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 16}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 17}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 21}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.local_address": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "pyreqwest.client.BaseClientBuilder.interface": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 15}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 19}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 8}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 8}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 19}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 13}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 13}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 8}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 8}, "pyreqwest.client.BaseClientBuilder.https_only": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.client.BaseClientBuilder.resolve": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 11}, "pyreqwest.client.Runtime": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.client.Runtime.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "pyreqwest.client.Runtime.close": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "pyreqwest.cookie": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "pyreqwest.cookie.Cookie": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 41}, "pyreqwest.cookie.Cookie.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "pyreqwest.cookie.Cookie.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "pyreqwest.cookie.Cookie.parse_encoded": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 13}, "pyreqwest.cookie.Cookie.split_parse": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 21}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 14}, "pyreqwest.cookie.Cookie.encode": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.stripped": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.with_name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.with_value": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.with_http_only": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_secure": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_same_site": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_partitioned": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_max_age": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 11}, "pyreqwest.cookie.Cookie.with_path": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_domain": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 10}, "pyreqwest.cookie.Cookie.partitioned": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.secure": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.same_site": {"qualname": 3, "fullname": 5, "annotation": 12, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.cookie.Cookie.value": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.cookie.Cookie.expires_datetime": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.cookie.Cookie.name": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pyreqwest.cookie.Cookie.value_trimmed": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "pyreqwest.cookie.Cookie.path": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "pyreqwest.cookie.Cookie.max_age": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.cookie.Cookie.domain": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "pyreqwest.cookie.Cookie.http_only": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.cookie.CookieStore": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "pyreqwest.cookie.CookieStore.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "pyreqwest.cookie.CookieStore.matches": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 31}, "pyreqwest.cookie.CookieStore.contains": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 20}, "pyreqwest.cookie.CookieStore.contains_any": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 22}, "pyreqwest.cookie.CookieStore.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 18}, "pyreqwest.cookie.CookieStore.get_any": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 19}, "pyreqwest.cookie.CookieStore.remove": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 18}, "pyreqwest.cookie.CookieStore.insert": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 15}, "pyreqwest.cookie.CookieStore.clear": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "pyreqwest.cookie.CookieStore.get_all_any": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 12}, "pyreqwest.exceptions": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pyreqwest.exceptions.Cause": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "pyreqwest.exceptions.Cause.message": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.exceptions.CauseErrorDetails": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"qualname": 2, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.exceptions.StatusErrorDetails": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "pyreqwest.exceptions.StatusErrorDetails.status": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.exceptions.PyreqwestError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "pyreqwest.exceptions.PyreqwestError.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 5}, "pyreqwest.exceptions.PyreqwestError.message": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.exceptions.DetailedPyreqwestError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 22}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.exceptions.RequestError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 19}, "pyreqwest.exceptions.StatusError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 35}, "pyreqwest.exceptions.RedirectError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 31}, "pyreqwest.exceptions.DecodeError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 22}, "pyreqwest.exceptions.BodyDecodeError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "pyreqwest.exceptions.JSONDecodeError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 54}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 5}, "pyreqwest.exceptions.TransportError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "pyreqwest.exceptions.RequestTimeoutError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 33}, "pyreqwest.exceptions.NetworkError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 37}, "pyreqwest.exceptions.ConnectTimeoutError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 20}, "pyreqwest.exceptions.ReadTimeoutError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "pyreqwest.exceptions.WriteTimeoutError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "pyreqwest.exceptions.PoolTimeoutError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 25}, "pyreqwest.exceptions.ConnectError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "pyreqwest.exceptions.ReadError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 22}, "pyreqwest.exceptions.WriteError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 22}, "pyreqwest.exceptions.ClientClosedError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 29}, "pyreqwest.exceptions.BuilderError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 22}, "pyreqwest.exceptions.RequestPanicError": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 52}, "pyreqwest.http": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "pyreqwest.http.Url": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "pyreqwest.http.Url.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.http.Url.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "pyreqwest.http.Url.parse_with_params": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 22}, "pyreqwest.http.Url.is_valid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 11}, "pyreqwest.http.Url.join": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 103}, "pyreqwest.http.Url.make_relative": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 22}, "pyreqwest.http.Url.with_query": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 13}, "pyreqwest.http.Url.extend_query": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 13}, "pyreqwest.http.Url.with_query_string": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 15}, "pyreqwest.http.Url.with_path": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "pyreqwest.http.Url.with_path_segments": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 36}, "pyreqwest.http.Url.with_port": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 13}, "pyreqwest.http.Url.with_host": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 24}, "pyreqwest.http.Url.with_ip_host": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 13}, "pyreqwest.http.Url.with_username": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 8}, "pyreqwest.http.Url.with_password": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 8}, "pyreqwest.http.Url.with_scheme": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 8}, "pyreqwest.http.Url.with_fragment": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "pyreqwest.http.Url.origin_unicode": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.http.Url.password": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.http.Url.host_str": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 74}, "pyreqwest.http.Url.query_dict_multi_value": {"qualname": 5, "fullname": 7, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "pyreqwest.http.Url.has_authority": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 49}, "pyreqwest.http.Url.username": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "pyreqwest.http.Url.query_string": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.http.Url.port": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.http.Url.port_or_known_default": {"qualname": 5, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "pyreqwest.http.Url.has_host": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.http.Url.fragment": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "pyreqwest.http.Url.path_segments": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 50}, "pyreqwest.http.Url.is_special": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.http.Url.cannot_be_a_base": {"qualname": 5, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 61}, "pyreqwest.http.Url.path": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 48}, "pyreqwest.http.Url.scheme": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "pyreqwest.http.Url.authority": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 77}, "pyreqwest.http.Url.origin_ascii": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.http.Url.query_pairs": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "pyreqwest.http.Url.domain": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 45}, "pyreqwest.http.HeaderMap": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.http.HeaderMap.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 14}, "pyreqwest.http.HeaderMap.items": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMap.keys": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMap.values": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.http.HeaderMap.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 19}, "pyreqwest.http.HeaderMap.pop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 9}, "pyreqwest.http.HeaderMap.popitem": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 17}, "pyreqwest.http.HeaderMap.clear": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.http.HeaderMap.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 63}, "pyreqwest.http.HeaderMap.setdefault": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 20}, "pyreqwest.http.HeaderMap.keys_len": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 8}, "pyreqwest.http.HeaderMap.getall": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 13}, "pyreqwest.http.HeaderMap.insert": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 19}, "pyreqwest.http.HeaderMap.append": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 42}, "pyreqwest.http.HeaderMap.extend": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 9}, "pyreqwest.http.HeaderMap.popall": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 9}, "pyreqwest.http.HeaderMap.dict_multi_value": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 13}, "pyreqwest.http.HeaderMap.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.http.Mime": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "pyreqwest.http.Mime.parse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 12}, "pyreqwest.http.Mime.get_param": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 14}, "pyreqwest.http.Mime.index": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "pyreqwest.http.Mime.count": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 9}, "pyreqwest.http.Mime.type_": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.http.Mime.parameters": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.http.Mime.essence_str": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.http.Mime.subtype": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.http.Mime.suffix": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.http.HeaderMapItemsView": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMapItemsView.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMapKeysView": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMapKeysView.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "pyreqwest.http.HeaderMapValuesView": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.http.HeaderMapValuesView.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "pyreqwest.middleware": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pyreqwest.middleware.Next": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.middleware.Next.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 14}, "pyreqwest.middleware.SyncNext": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.middleware.SyncNext.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 14}, "pyreqwest.multipart": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pyreqwest.multipart.FormBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.multipart.FormBuilder.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "pyreqwest.multipart.FormBuilder.text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 12}, "pyreqwest.multipart.FormBuilder.file": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 7}, "pyreqwest.multipart.FormBuilder.sync_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 11}, "pyreqwest.multipart.FormBuilder.part": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 9}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 14}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.multipart.FormBuilder.boundary": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.multipart.PartBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "pyreqwest.multipart.PartBuilder.from_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 7}, "pyreqwest.multipart.PartBuilder.from_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 10}, "pyreqwest.multipart.PartBuilder.from_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 11}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 107, "bases": 0, "doc": 36}, "pyreqwest.multipart.PartBuilder.from_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 11}, "pyreqwest.multipart.PartBuilder.mime": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 9}, "pyreqwest.multipart.PartBuilder.file_name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 6}, "pyreqwest.multipart.PartBuilder.headers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 9}, "pyreqwest.proxy": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pyreqwest.proxy.ProxyBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 45}, "pyreqwest.proxy.ProxyBuilder.http": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 11}, "pyreqwest.proxy.ProxyBuilder.https": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 11}, "pyreqwest.proxy.ProxyBuilder.all": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 26}, "pyreqwest.proxy.ProxyBuilder.custom": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 32}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 11}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 12}, "pyreqwest.proxy.ProxyBuilder.headers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 6}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.client_mocker": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 14}, "pyreqwest.pytest_plugin.ClientMocker": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 22}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 254, "bases": 0, "doc": 13}, "pyreqwest.pytest_plugin.ClientMocker.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.post": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.put": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.head": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.options": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 187, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.Mock": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyreqwest.pytest_plugin.Mock.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 227, "bases": 0, "doc": 11}, "pyreqwest.pytest_plugin.Mock.assert_called": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 18}, "pyreqwest.pytest_plugin.Mock.get_requests": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.Mock.match_query": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 136, "bases": 0, "doc": 15}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.Mock.match_header": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.Mock.match_body": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 16}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 11}, "pyreqwest.pytest_plugin.Mock.match_request": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 14}, "pyreqwest.pytest_plugin.Mock.with_status": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.pytest_plugin.Mock.with_header": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 10}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 12}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 14}, "pyreqwest.pytest_plugin.Mock.with_version": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.request": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pyreqwest.request.ConsumedRequest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "pyreqwest.request.ConsumedRequest.send": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 10}, "pyreqwest.request.StreamRequest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "pyreqwest.request.StreamRequest.from_request_and_body": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 10}, "pyreqwest.request.SyncConsumedRequest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 14}, "pyreqwest.request.SyncConsumedRequest.send": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 10}, "pyreqwest.request.SyncStreamRequest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 10}, "pyreqwest.request.Request": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.request.Request.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "pyreqwest.request.Request.repr_full": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 12}, "pyreqwest.request.Request.from_request_and_body": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 10}, "pyreqwest.request.Request.headers": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "pyreqwest.request.Request.body": {"qualname": 2, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyreqwest.request.Request.extensions": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "pyreqwest.request.Request.method": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.request.Request.read_buffer_limit": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.request.Request.url": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyreqwest.request.RequestBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 22}, "pyreqwest.request.RequestBuilder.build": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 13}, "pyreqwest.request.RequestBuilder.build_streamed": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.request.SyncRequestBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 23}, "pyreqwest.request.SyncRequestBuilder.build": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 13}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.request.BaseRequestBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.request.BaseRequestBuilder.header": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 7}, "pyreqwest.request.BaseRequestBuilder.headers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 9}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 7}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 8}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 8}, "pyreqwest.request.BaseRequestBuilder.body_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "pyreqwest.request.BaseRequestBuilder.body_json": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 9}, "pyreqwest.request.BaseRequestBuilder.query": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 6}, "pyreqwest.request.BaseRequestBuilder.timeout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "pyreqwest.request.BaseRequestBuilder.multipart": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 8}, "pyreqwest.request.BaseRequestBuilder.form": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 9}, "pyreqwest.request.BaseRequestBuilder.extensions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 17}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 9}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 10}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 11}, "pyreqwest.request.RequestBody": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "pyreqwest.request.RequestBody.from_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 7}, "pyreqwest.request.RequestBody.from_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 8}, "pyreqwest.request.RequestBody.from_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 9}, "pyreqwest.request.RequestBody.copy_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 10}, "pyreqwest.request.RequestBody.get_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 11}, "pyreqwest.response": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "pyreqwest.response.Response": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 9}, "pyreqwest.response.Response.body_reader": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "pyreqwest.response.SyncResponse": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "pyreqwest.response.SyncResponse.bytes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 12}, "pyreqwest.response.SyncResponse.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "pyreqwest.response.SyncResponse.text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "pyreqwest.response.SyncResponse.body_reader": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "pyreqwest.response.BaseResponse": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.response.BaseResponse.error_for_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "pyreqwest.response.BaseResponse.get_header": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 12}, "pyreqwest.response.BaseResponse.get_header_all": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 14}, "pyreqwest.response.BaseResponse.content_type_mime": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 13}, "pyreqwest.response.BaseResponse.bytes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "pyreqwest.response.BaseResponse.json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "pyreqwest.response.BaseResponse.text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "pyreqwest.response.BaseResponse.headers": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "pyreqwest.response.BaseResponse.version": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "pyreqwest.response.BaseResponse.extensions": {"qualname": 2, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "pyreqwest.response.BaseResponse.status": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "pyreqwest.response.ResponseBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.response.ResponseBuilder.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "pyreqwest.response.ResponseBuilder.status": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 6}, "pyreqwest.response.ResponseBuilder.version": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 7}, "pyreqwest.response.ResponseBuilder.header": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 9}, "pyreqwest.response.ResponseBuilder.headers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 9}, "pyreqwest.response.ResponseBuilder.extensions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 5}, "pyreqwest.response.ResponseBuilder.body_bytes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 11}, "pyreqwest.response.ResponseBuilder.body_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.response.ResponseBuilder.body_json": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "pyreqwest.response.ResponseBuilder.body_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 17}, "pyreqwest.response.ResponseBuilder.build": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 6}, "pyreqwest.response.ResponseBuilder.build_sync": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 9}, "pyreqwest.response.ResponseBuilder.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 5}, "pyreqwest.response.ResponseBodyReader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 6}, "pyreqwest.response.SyncResponseBodyReader": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 6}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "pyreqwest.response.SyncResponseBodyReader.read": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 19}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 19}, "pyreqwest.types": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyreqwest.types.HeadersType": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.types.QueryParams": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.types.FormParams": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.types.ExtensionsType": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.types.SyncStream": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pyreqwest.types.Stream": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}}, "length": 449, "save": true}, "index": {"qualname": {"root": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 25, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 8, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}}, "df": 3}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonLoads": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.http.Mime.index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.bytes.Bytes.isalpha": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.bytes.Bytes.isascii": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.isdigit": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"pyreqwest.http.Url.with_ip_host": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.items": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.DecodeError": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 23, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.BodyDecodeError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}}, "df": 23}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClient": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 57}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.BaseRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 18}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.BaseResponse": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 12}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ReadError": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.remove": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}}, "df": 6}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RedirectError": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}}, "df": 3, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 14}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.ResponseBodyReader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}}, "df": 3}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"0": {"9": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}}, "df": 5}, "2": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 9}, "docs": {"pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 4, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.types.ExtensionsType": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.SyncClient.__enter__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 4, "d": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 3, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}}, "df": 11, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.types.SyncStream": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.SyncResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.stripped": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.setdefault": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.subtype": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.http.Mime.suffix": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 8}}}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.TransportError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 8}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.upper": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}}, "df": 41}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}}, "df": 12, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ClientClosedError": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}}, "df": 16}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ConnectError": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}}, "df": 31, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 12}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.HeaderMap.getall": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 3}}, "p": {"docs": {"pyreqwest.http.HeaderMap.pop": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.HeaderMap.popall": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}}, "df": 3}}, "h": {"docs": {"pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}}, "df": 7}}, "t": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}}, "df": 10}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.query_pairs": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 9}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "a": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.__aexit__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 3}, "d": {"docs": {"pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}}, "df": 33}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.WriteError": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.Request.method": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 3, "m": {"docs": {"pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}}, "df": 10}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.FormParams": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.NetworkError": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 5, "s": {"docs": {"pyreqwest.http.HeaderMap.values": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.QueryParams": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 25, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}, "pyreqwest.client.types.TlsVersion": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.bytes": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.exceptions": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.middleware": {"tf": 1}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.multipart": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}, "pyreqwest.types": {"tf": 1}, "pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}, "pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 449, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 37}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 3}}, "p": {"docs": {"pyreqwest.http.HeaderMap.pop": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.HeaderMap.popall": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}}, "df": 3}}, "h": {"docs": {"pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}}, "df": 7}}, "t": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}}, "df": 10}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.query_pairs": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1.4142135623730951}}, "df": 12, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 9}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 37}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}, "pyreqwest.client.types.TlsVersion": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.get": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.post": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.put": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.patch": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.delete": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.head": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aenter__": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aexit__": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.close": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}}, "df": 113, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ClientClosedError": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}}, "df": 16}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ConnectError": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.parse": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.encode": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.secure": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.value": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.name": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.path": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.domain": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 44, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 12}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}, "pyreqwest.client.types.TlsVersion": {"tf": 1}, "pyreqwest.types": {"tf": 1}, "pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}, "pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 25}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 8}}}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.TransportError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 8}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 8, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}}, "df": 3}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonLoads": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.http.Mime.index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.bytes.Bytes.isalpha": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.bytes.Bytes.isascii": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.isdigit": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"pyreqwest.http.Url.with_ip_host": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.items": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.DecodeError": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 23, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.BodyDecodeError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.islower": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.lower": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.upper": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}}, "df": 24}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClient": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 57}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.BaseRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 18}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.BaseResponse": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 12}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ReadError": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.remove": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.request": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.copy": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.repr_full": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.headers": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.extensions": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.method": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.url": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}}, "df": 55, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}}, "df": 6}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.RedirectError": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.response": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1.4142135623730951}, "pyreqwest.response.Response.body_reader": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 40, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 14}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.ResponseBodyReader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}}, "df": 3}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"0": {"9": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}}, "df": 5}, "2": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 9}, "docs": {"pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 81, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.types.ExtensionsType": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 32}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.SyncClient.__enter__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 4, "d": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 3, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}}, "df": 11, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.types.SyncStream": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.SyncResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.stripped": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.setdefault": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.subtype": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.http.Mime.suffix": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.Request.read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.upper": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}}, "df": 41}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.HeaderMap.getall": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.__aexit__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 3}, "d": {"docs": {"pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}}, "df": 33}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.WriteError": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.middleware": {"tf": 1}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}}, "df": 8}}}}}}}}, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}}, "df": 22}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.Request.method": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 3, "m": {"docs": {"pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}}, "df": 10}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.FormParams": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.NetworkError": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 5, "s": {"docs": {"pyreqwest.http.HeaderMap.values": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.QueryParams": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "annotation": {"root": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.domain": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.port": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}, "pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 64, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 10}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.Request.body": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.request.Request.body": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}, "pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.exceptions.Cause.message": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}}, "df": 27, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "x": {"2": {"7": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.request.Request.url": {"tf": 1}}, "df": 1}}}}}, "default_value": {"root": {"0": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}, "1": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}, "3": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}, "docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1.4142135623730951}, "pyreqwest.client.types.TlsVersion": {"tf": 1}, "pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}, "pyreqwest.types.SyncStream": {"tf": 1.4142135623730951}, "pyreqwest.types.Stream": {"tf": 2.23606797749979}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1.4142135623730951}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1.4142135623730951}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.JsonLoads": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1.4142135623730951}, "pyreqwest.types.FormParams": {"tf": 1.4142135623730951}, "pyreqwest.types.ExtensionsType": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.Stream": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.types.Stream": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.types.Stream": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}, "pyreqwest.client.types.JsonLoads": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.SyncJsonLoads": {"tf": 1}, "pyreqwest.client.types.TlsVersion": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1.4142135623730951}, "pyreqwest.types.FormParams": {"tf": 1.4142135623730951}, "pyreqwest.types.ExtensionsType": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"1": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonLoads": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.types.JsonDumps": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}}, "df": 4}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.SyncJsonLoads": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.types.HeadersType": {"tf": 1}, "pyreqwest.types.QueryParams": {"tf": 1}, "pyreqwest.types.FormParams": {"tf": 1}, "pyreqwest.types.ExtensionsType": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 1}}, "df": 1}}}}}}}, "x": {"2": {"7": {"docs": {"pyreqwest.client.types.TlsVersion": {"tf": 2.8284271247461903}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.types.SyncStream": {"tf": 1}, "pyreqwest.types.Stream": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "signature": {"root": {"0": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 2}, "1": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 2}, "2": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 2}, "3": {"9": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 2.8284271247461903}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 2.8284271247461903}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 2.449489742783178}}, "df": 4}, "docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 2}, "docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 4}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 4}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 4}, "pyreqwest.bytes.Bytes.__init__": {"tf": 4.58257569495584}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 5}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 5}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isascii": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.islower": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isspace": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isupper": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.lower": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.upper": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 3.4641016151377544}, "pyreqwest.client.Client.request": {"tf": 7.211102550927978}, "pyreqwest.client.Client.get": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.post": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.put": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.patch": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.delete": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.head": {"tf": 6.4031242374328485}, "pyreqwest.client.Client.__aenter__": {"tf": 3.4641016151377544}, "pyreqwest.client.Client.__aexit__": {"tf": 5.656854249492381}, "pyreqwest.client.Client.close": {"tf": 3.4641016151377544}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 2}, "pyreqwest.client.ClientBuilder.build": {"tf": 4.47213595499958}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 8}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 10.954451150103322}, "pyreqwest.client.SyncClient.request": {"tf": 7.211102550927978}, "pyreqwest.client.SyncClient.get": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.post": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.put": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.patch": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.delete": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.head": {"tf": 6.557438524302}, "pyreqwest.client.SyncClient.__enter__": {"tf": 3.4641016151377544}, "pyreqwest.client.SyncClient.__exit__": {"tf": 5.656854249492381}, "pyreqwest.client.SyncClient.close": {"tf": 3.4641016151377544}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 2}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 4.47213595499958}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 7.810249675906654}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 10.816653826391969}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 5.744562646538029}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 5.291502622129181}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 6.928203230275509}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 5.291502622129181}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 5.291502622129181}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 3.4641016151377544}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 4.898979485566356}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 4.898979485566356}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 4.898979485566356}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 4.898979485566356}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 5.385164807134504}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 3.4641016151377544}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 3.4641016151377544}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 3.4641016151377544}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 3.4641016151377544}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 5.385164807134504}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 4.898979485566356}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 5.385164807134504}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 5.385164807134504}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 5}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 5.385164807134504}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 6.928203230275509}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 6.928203230275509}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 4.47213595499958}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 6}, "pyreqwest.client.Runtime.__init__": {"tf": 2}, "pyreqwest.client.Runtime.close": {"tf": 3.4641016151377544}, "pyreqwest.cookie.Cookie.__init__": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.parse": {"tf": 4.898979485566356}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 4.898979485566356}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 5.385164807134504}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 5.385164807134504}, "pyreqwest.cookie.Cookie.encode": {"tf": 3.4641016151377544}, "pyreqwest.cookie.Cookie.stripped": {"tf": 3.4641016151377544}, "pyreqwest.cookie.Cookie.with_name": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.with_value": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 6.6332495807108}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 4.47213595499958}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 5.385164807134504}, "pyreqwest.cookie.Cookie.with_path": {"tf": 5}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 5}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 5.385164807134504}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 2}, "pyreqwest.cookie.CookieStore.matches": {"tf": 6.782329983125268}, "pyreqwest.cookie.CookieStore.contains": {"tf": 6}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 6}, "pyreqwest.cookie.CookieStore.get": {"tf": 7.280109889280518}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 7.280109889280518}, "pyreqwest.cookie.CookieStore.remove": {"tf": 7.280109889280518}, "pyreqwest.cookie.CookieStore.insert": {"tf": 7.54983443527075}, "pyreqwest.cookie.CookieStore.clear": {"tf": 3.4641016151377544}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 5}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 5}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 4.69041575982343}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 5.830951894845301}, "pyreqwest.http.Url.__init__": {"tf": 3.4641016151377544}, "pyreqwest.http.Url.parse": {"tf": 4.898979485566356}, "pyreqwest.http.Url.parse_with_params": {"tf": 8.366600265340756}, "pyreqwest.http.Url.is_valid": {"tf": 4}, "pyreqwest.http.Url.join": {"tf": 4.47213595499958}, "pyreqwest.http.Url.make_relative": {"tf": 5.916079783099616}, "pyreqwest.http.Url.with_query": {"tf": 7.937253933193772}, "pyreqwest.http.Url.extend_query": {"tf": 7.615773105863909}, "pyreqwest.http.Url.with_query_string": {"tf": 5}, "pyreqwest.http.Url.with_path": {"tf": 4.47213595499958}, "pyreqwest.http.Url.with_path_segments": {"tf": 5}, "pyreqwest.http.Url.with_port": {"tf": 5}, "pyreqwest.http.Url.with_host": {"tf": 5}, "pyreqwest.http.Url.with_ip_host": {"tf": 4.47213595499958}, "pyreqwest.http.Url.with_username": {"tf": 4.47213595499958}, "pyreqwest.http.Url.with_password": {"tf": 5}, "pyreqwest.http.Url.with_scheme": {"tf": 4.47213595499958}, "pyreqwest.http.Url.with_fragment": {"tf": 5}, "pyreqwest.http.HeaderMap.__init__": {"tf": 7.14142842854285}, "pyreqwest.http.HeaderMap.items": {"tf": 4.47213595499958}, "pyreqwest.http.HeaderMap.keys": {"tf": 4.47213595499958}, "pyreqwest.http.HeaderMap.values": {"tf": 4.47213595499958}, "pyreqwest.http.HeaderMap.get": {"tf": 4.69041575982343}, "pyreqwest.http.HeaderMap.pop": {"tf": 4.242640687119285}, "pyreqwest.http.HeaderMap.popitem": {"tf": 4.69041575982343}, "pyreqwest.http.HeaderMap.clear": {"tf": 3.4641016151377544}, "pyreqwest.http.HeaderMap.update": {"tf": 5.5677643628300215}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 4.69041575982343}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 3.4641016151377544}, "pyreqwest.http.HeaderMap.getall": {"tf": 5}, "pyreqwest.http.HeaderMap.insert": {"tf": 7.211102550927978}, "pyreqwest.http.HeaderMap.append": {"tf": 6.855654600401044}, "pyreqwest.http.HeaderMap.extend": {"tf": 6.928203230275509}, "pyreqwest.http.HeaderMap.popall": {"tf": 4.242640687119285}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 5.477225575051661}, "pyreqwest.http.HeaderMap.copy": {"tf": 3.4641016151377544}, "pyreqwest.http.Mime.parse": {"tf": 4.898979485566356}, "pyreqwest.http.Mime.get_param": {"tf": 5}, "pyreqwest.http.Mime.index": {"tf": 5.196152422706632}, "pyreqwest.http.Mime.count": {"tf": 5.196152422706632}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 2.8284271247461903}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 3.7416573867739413}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 2.8284271247461903}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 3.7416573867739413}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 2.8284271247461903}, "pyreqwest.middleware.Next.run": {"tf": 6}, "pyreqwest.middleware.SyncNext.run": {"tf": 6.164414002968976}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 2}, "pyreqwest.multipart.FormBuilder.text": {"tf": 5.291502622129181}, "pyreqwest.multipart.FormBuilder.file": {"tf": 6.082762530298219}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 6.082762530298219}, "pyreqwest.multipart.FormBuilder.part": {"tf": 6}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 3.4641016151377544}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 3.4641016151377544}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 3.4641016151377544}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 4.898979485566356}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 4.898979485566356}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 8.94427190999916}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 9.433981132056603}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 5.744562646538029}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 5.744562646538029}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 5.744562646538029}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 4.47213595499958}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 6.928203230275509}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 6.082762530298219}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 6.082762530298219}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 6.082762530298219}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 7.810249675906654}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 5.291502622129181}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 4.47213595499958}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 6.928203230275509}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 5}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 6.164414002968976}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 6.164414002968976}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 14.352700094407323}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 12.328828005937952}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 5.0990195135927845}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 5}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 3.4641016151377544}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 3.4641016151377544}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 3.4641016151377544}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 13.601470508735444}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 8.888194417315589}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 5}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 3.4641016151377544}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 3.4641016151377544}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 10.44030650891055}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 8.06225774829855}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 8.06225774829855}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 7.810249675906654}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 6.48074069840786}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 8.12403840463596}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 9.591663046625438}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 4.47213595499958}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 5.291502622129181}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 5.477225575051661}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 4.47213595499958}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 4.47213595499958}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 4.47213595499958}, "pyreqwest.request.ConsumedRequest.send": {"tf": 4.47213595499958}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 6.4031242374328485}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 6.4031242374328485}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 4.47213595499958}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 6.4031242374328485}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 6.4031242374328485}, "pyreqwest.request.Request.copy": {"tf": 3.4641016151377544}, "pyreqwest.request.Request.repr_full": {"tf": 3.4641016151377544}, "pyreqwest.request.Request.from_request_and_body": {"tf": 6.4031242374328485}, "pyreqwest.request.RequestBuilder.build": {"tf": 4.47213595499958}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 4.47213595499958}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 4.47213595499958}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 5.291502622129181}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 6.928203230275509}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 5.744562646538029}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 5.477225575051661}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 4.358898943540674}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 7.615773105863909}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 4.898979485566356}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 5.291502622129181}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 7.615773105863909}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 7.615773105863909}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 4.358898943540674}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 4.47213595499958}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 3}, "pyreqwest.request.RequestBody.from_text": {"tf": 4.898979485566356}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 5.830951894845301}, "pyreqwest.request.RequestBody.from_stream": {"tf": 8.94427190999916}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 5}, "pyreqwest.request.RequestBody.get_stream": {"tf": 8.54400374531753}, "pyreqwest.response.SyncResponse.bytes": {"tf": 4.47213595499958}, "pyreqwest.response.SyncResponse.json": {"tf": 3.4641016151377544}, "pyreqwest.response.SyncResponse.text": {"tf": 3.4641016151377544}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 3.4641016151377544}, "pyreqwest.response.BaseResponse.get_header": {"tf": 5}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 5}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 5}, "pyreqwest.response.BaseResponse.bytes": {"tf": 3.872983346207417}, "pyreqwest.response.BaseResponse.json": {"tf": 3.872983346207417}, "pyreqwest.response.BaseResponse.text": {"tf": 3.872983346207417}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 2}, "pyreqwest.response.ResponseBuilder.status": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.version": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.header": {"tf": 5.291502622129181}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 6.928203230275509}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 7.615773105863909}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 5.477225575051661}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 8.774964387392123}, "pyreqwest.response.ResponseBuilder.build": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 4.47213595499958}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 3.4641016151377544}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 4.47213595499958}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 6.244997998398398}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 5}}, "df": 299, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}}, "df": 10}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.extend_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 31}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.7320508075688772}}, "df": 5}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 7}}}, "b": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 36}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 16}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1.4142135623730951}}, "df": 23}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}}, "df": 15}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.upper": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1.4142135623730951}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.make_relative": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.extend_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query_string": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_path": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_port": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_host": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_ip_host": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_username": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_password": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_scheme": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_fragment": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1.4142135623730951}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.copy": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 253}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 14}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_secure": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 2}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.extend_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 2}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.getall": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.insert": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.append": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.extend": {"tf": 2}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 2}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 2}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 2.449489742783178}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 2}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 2}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 2.449489742783178}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 2.449489742783178}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 2}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 2}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 116, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_scheme": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 5}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.get": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.post": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.put": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.patch": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.delete": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.head": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.7320508075688772}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.get": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.post": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.put": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.patch": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.delete": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.head": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1.4142135623730951}, "pyreqwest.middleware.SyncNext.run": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 2}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 93}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 10}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}}, "df": 7}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 20, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}}, "df": 13}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 10}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.parse": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 3}}, "n": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 5}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 17}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}}, "df": 10}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.get": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.post": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.put": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.patch": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.delete": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.head": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.get": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.post": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.put": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.patch": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.delete": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.head": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.4142135623730951}}, "df": 33}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}}, "df": 15}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}}, "df": 3}}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 39}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 5}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMap.items": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMap.keys": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.http.HeaderMap.values": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_host": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}}, "df": 13, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1.7320508075688772}, "pyreqwest.middleware.SyncNext.run": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 2}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 2}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}}, "df": 35, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}}, "df": 8}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1.4142135623730951}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1.7320508075688772}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 9}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 2.6457513110645907}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1.4142135623730951}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 70, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}}, "df": 9}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 17}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {"pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.RequestBuilder.build": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1.7320508075688772}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.extend_query": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 15}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 8}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 12}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"1": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 2}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 2}}, "df": 2}, "docs": {}, "df": 0}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 13, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 4}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 2}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}}, "df": 14}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 13}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}}, "df": 14}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1.7320508075688772}}, "df": 5}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 29}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_fragment": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.SyncResponse": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.exceptions.PyreqwestError": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RedirectError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.DecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.TransportError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ReadError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.WriteError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.BuilderError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}}, "df": 19}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 17}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "doc": {"root": {"0": {"1": {"2": {"3": {"4": {"5": {"6": {"7": {"8": {"9": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.version": {"tf": 1}}, "df": 3, "x": {"7": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.bytes.Bytes.isascii": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}, "1": {"0": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}}, "df": 1}, "1": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "6": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}}, "df": 1, "b": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 1}}}, "docs": {"pyreqwest": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 3}, "2": {"0": {"0": {"docs": {"pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "5": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "f": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}}, "df": 1}}, "3": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "4": {"0": {"4": {"docs": {"pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1, "/": {"5": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 3}}}, "docs": {}, "df": 0}}}}, "5": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1}}}, "6": {"5": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}}, "df": 2}}, "8": {"3": {"8": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 1}, "9": {"0": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}}, "df": 1}, "docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}, "docs": {"pyreqwest.client.types": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonDumpsContext": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonDumpsContext.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoadsContext.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoadsContext.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonDumps": {"tf": 1.7320508075688772}, "pyreqwest.client.types.JsonLoads": {"tf": 1.7320508075688772}, "pyreqwest.client.types.SyncJsonLoads": {"tf": 1.7320508075688772}, "pyreqwest.client.types.TlsVersion": {"tf": 1.7320508075688772}, "pyreqwest": {"tf": 19.621416870348583}, "pyreqwest.bytes": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes": {"tf": 5.0990195135927845}, "pyreqwest.bytes.Bytes.__init__": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 4}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 3.605551275463989}, "pyreqwest.bytes.Bytes.isascii": {"tf": 3.4641016151377544}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 3.605551275463989}, "pyreqwest.bytes.Bytes.islower": {"tf": 2.6457513110645907}, "pyreqwest.bytes.Bytes.isspace": {"tf": 3.605551275463989}, "pyreqwest.bytes.Bytes.isupper": {"tf": 2.6457513110645907}, "pyreqwest.bytes.Bytes.lower": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.upper": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 2.23606797749979}, "pyreqwest.client": {"tf": 3.605551275463989}, "pyreqwest.client.Client": {"tf": 2.8284271247461903}, "pyreqwest.client.Client.request": {"tf": 2.449489742783178}, "pyreqwest.client.Client.get": {"tf": 2.449489742783178}, "pyreqwest.client.Client.post": {"tf": 2.449489742783178}, "pyreqwest.client.Client.put": {"tf": 2.449489742783178}, "pyreqwest.client.Client.patch": {"tf": 2.449489742783178}, "pyreqwest.client.Client.delete": {"tf": 2.449489742783178}, "pyreqwest.client.Client.head": {"tf": 2.449489742783178}, "pyreqwest.client.Client.__aenter__": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aexit__": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.close": {"tf": 1.7320508075688772}, "pyreqwest.client.ClientBuilder": {"tf": 3.872983346207417}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.ClientBuilder.build": {"tf": 2.449489742783178}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1.7320508075688772}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 2}, "pyreqwest.client.SyncClient": {"tf": 2.8284271247461903}, "pyreqwest.client.SyncClient.request": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.get": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.post": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.put": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.patch": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.delete": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.head": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.close": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClientBuilder": {"tf": 3.872983346207417}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 2.449489742783178}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 2}, "pyreqwest.client.BaseClient": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 2.23606797749979}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 2.23606797749979}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 2.23606797749979}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 2.449489742783178}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 2.449489742783178}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 2.449489742783178}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 2.449489742783178}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 2.449489742783178}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 2}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 2}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 2}, "pyreqwest.client.Runtime": {"tf": 1.7320508075688772}, "pyreqwest.client.Runtime.__init__": {"tf": 1.7320508075688772}, "pyreqwest.client.Runtime.close": {"tf": 1.7320508075688772}, "pyreqwest.cookie": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie": {"tf": 3.3166247903554}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.parse": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 2.6457513110645907}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.encode": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.secure": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.value": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.name": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.path": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.domain": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore": {"tf": 2.8284271247461903}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1.7320508075688772}, "pyreqwest.exceptions": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.Cause": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.Cause.message": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.CauseErrorDetails.causes": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.StatusErrorDetails.status": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.PyreqwestError.message": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 2.8284271247461903}, "pyreqwest.exceptions.DetailedPyreqwestError.details": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.RequestError": {"tf": 2.8284271247461903}, "pyreqwest.exceptions.StatusError": {"tf": 3.3166247903554}, "pyreqwest.exceptions.RedirectError": {"tf": 3.3166247903554}, "pyreqwest.exceptions.DecodeError": {"tf": 3}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 3}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 3.4641016151377544}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.TransportError": {"tf": 3}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 3}, "pyreqwest.exceptions.NetworkError": {"tf": 3}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 3}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 3}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 3}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 3}, "pyreqwest.exceptions.ConnectError": {"tf": 3}, "pyreqwest.exceptions.ReadError": {"tf": 3}, "pyreqwest.exceptions.WriteError": {"tf": 3}, "pyreqwest.exceptions.ClientClosedError": {"tf": 3}, "pyreqwest.exceptions.BuilderError": {"tf": 3}, "pyreqwest.exceptions.RequestPanicError": {"tf": 3}, "pyreqwest.http": {"tf": 1.7320508075688772}, "pyreqwest.http.Url": {"tf": 2.8284271247461903}, "pyreqwest.http.Url.__init__": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.parse": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.is_valid": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.join": {"tf": 4.242640687119285}, "pyreqwest.http.Url.make_relative": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_query": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.extend_query": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_query_string": {"tf": 2}, "pyreqwest.http.Url.with_path": {"tf": 2.23606797749979}, "pyreqwest.http.Url.with_path_segments": {"tf": 2.23606797749979}, "pyreqwest.http.Url.with_port": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_host": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_ip_host": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_username": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_password": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_scheme": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_fragment": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.origin_unicode": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.password": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.host_str": {"tf": 2.8284271247461903}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.has_authority": {"tf": 2.8284271247461903}, "pyreqwest.http.Url.username": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.query_string": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.port": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.port_or_known_default": {"tf": 2.449489742783178}, "pyreqwest.http.Url.has_host": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.fragment": {"tf": 2}, "pyreqwest.http.Url.path_segments": {"tf": 2}, "pyreqwest.http.Url.is_special": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 2.8284271247461903}, "pyreqwest.http.Url.path": {"tf": 2.23606797749979}, "pyreqwest.http.Url.scheme": {"tf": 2}, "pyreqwest.http.Url.authority": {"tf": 3.1622776601683795}, "pyreqwest.http.Url.origin_ascii": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.query_pairs": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.domain": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.items": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.keys": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.values": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.get": {"tf": 2}, "pyreqwest.http.HeaderMap.pop": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.clear": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.update": {"tf": 2.23606797749979}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.getall": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.insert": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.append": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.extend": {"tf": 2}, "pyreqwest.http.HeaderMap.popall": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 2.23606797749979}, "pyreqwest.http.HeaderMap.copy": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime": {"tf": 2.8284271247461903}, "pyreqwest.http.Mime.parse": {"tf": 2.23606797749979}, "pyreqwest.http.Mime.get_param": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.index": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.count": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.type_": {"tf": 2}, "pyreqwest.http.Mime.parameters": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.essence_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.subtype": {"tf": 2}, "pyreqwest.http.Mime.suffix": {"tf": 2}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapItemsView.__init__": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapKeysView.__init__": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMapValuesView.__init__": {"tf": 1.7320508075688772}, "pyreqwest.middleware": {"tf": 1.7320508075688772}, "pyreqwest.middleware.Next": {"tf": 1.7320508075688772}, "pyreqwest.middleware.Next.run": {"tf": 1.7320508075688772}, "pyreqwest.middleware.SyncNext": {"tf": 1.7320508075688772}, "pyreqwest.middleware.SyncNext.run": {"tf": 1.7320508075688772}, "pyreqwest.multipart": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder": {"tf": 2}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1.7320508075688772}, "pyreqwest.proxy": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder": {"tf": 3.605551275463989}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 2.6457513110645907}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 2.8284271247461903}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 2.6457513110645907}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1.7320508075688772}, "pyreqwest.request": {"tf": 1.7320508075688772}, "pyreqwest.request.ConsumedRequest": {"tf": 1.7320508075688772}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1.7320508075688772}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.StreamRequest": {"tf": 1.7320508075688772}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncStreamRequest": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.Request": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.copy": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.repr_full": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.headers": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.body": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.extensions": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.method": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.read_buffer_limit": {"tf": 1.7320508075688772}, "pyreqwest.request.Request.url": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBuilder": {"tf": 3}, "pyreqwest.request.RequestBuilder.build": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncRequestBuilder": {"tf": 3}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1.7320508075688772}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1.7320508075688772}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.from_text": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1.7320508075688772}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1.7320508075688772}, "pyreqwest.response": {"tf": 1.7320508075688772}, "pyreqwest.response.Response": {"tf": 1.7320508075688772}, "pyreqwest.response.Response.body_reader": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponse": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponse.json": {"tf": 2.23606797749979}, "pyreqwest.response.SyncResponse.text": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.json": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.text": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.headers": {"tf": 2.6457513110645907}, "pyreqwest.response.BaseResponse.version": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.7320508075688772}, "pyreqwest.response.BaseResponse.status": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 2.23606797749979}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1.7320508075688772}, "pyreqwest.response.ResponseBodyReader": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1.7320508075688772}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1.7320508075688772}, "pyreqwest.types": {"tf": 1.7320508075688772}, "pyreqwest.types.HeadersType": {"tf": 1.7320508075688772}, "pyreqwest.types.QueryParams": {"tf": 1.7320508075688772}, "pyreqwest.types.FormParams": {"tf": 1.7320508075688772}, "pyreqwest.types.ExtensionsType": {"tf": 1.7320508075688772}, "pyreqwest.types.SyncStream": {"tf": 1.7320508075688772}, "pyreqwest.types.Stream": {"tf": 1.7320508075688772}}, "df": 449, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 4, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 19, "s": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 4}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1.4142135623730951}, "pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1.4142135623730951}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1.4142135623730951}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1.4142135623730951}, "pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 2.23606797749979}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 2}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.upper": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.7320508075688772}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 3}, "pyreqwest.http.Url.make_relative": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.username": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 2}, "pyreqwest.http.Url.fragment": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 2}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.authority": {"tf": 2}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 2.23606797749979}, "pyreqwest.http.HeaderMap.popall": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.count": {"tf": 1.4142135623730951}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1.7320508075688772}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.json": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.text": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.headers": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.4142135623730951}, "pyreqwest.types": {"tf": 1}}, "df": 168, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}}, "df": 3}}, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}, "y": {"docs": {"pyreqwest.http.Url.authority": {"tf": 1}}, "df": 1}, "n": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.make_relative": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.path": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.4142135623730951}}, "df": 56}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "t": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 24}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1.4142135623730951}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest": {"tf": 2}, "pyreqwest.bytes.Bytes": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 85, "p": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.type_": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"pyreqwest.exceptions.RedirectError": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}}, "df": 12, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 21}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.TransportError": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}}, "df": 1}}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"0": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 4}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1.7320508075688772}, "pyreqwest.client.ClientBuilder": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClientBuilder": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 70, "m": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.multipart": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 30}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}}, "df": 3, "y": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1.4142135623730951}}, "df": 9, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.multipart.FormBuilder.text": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.pytest_plugin": {"tf": 1}}, "df": 6, "/": {"1": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes": {"tf": 2}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1, "t": {"docs": {"pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.cookie.CookieStore.get_any": {"tf": 1}}, "df": 1}, "e": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_port": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 6, "s": {"docs": {"pyreqwest.http.Url.authority": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}}, "df": 3}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 10, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 15}}}}}, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1.7320508075688772}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1.4142135623730951}}, "df": 12, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.exceptions.ClientClosedError": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_query_string": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}}, "df": 3}}, "h": {"docs": {"pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 22}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}}, "df": 9, "s": {"docs": {"pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_query": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}}, "df": 11, "s": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.Cookie.stripped": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.pytest_plugin": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types": {"tf": 1}, "pyreqwest": {"tf": 3}, "pyreqwest.client": {"tf": 1.7320508075688772}, "pyreqwest.client.Client": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.close": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}}, "df": 24, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 3}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client.__aexit__": {"tf": 1}, "pyreqwest.client.Client.close": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClient.close": {"tf": 1}}, "df": 5, "d": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.middleware": {"tf": 1}, "pyreqwest.multipart": {"tf": 1}, "pyreqwest.proxy": {"tf": 1}, "pyreqwest.request": {"tf": 1}, "pyreqwest.response": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 15, "d": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}}, "df": 2}, "s": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.path": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 3, "d": {"docs": {"pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1.4142135623730951}, "pyreqwest.cookie": {"tf": 1.7320508075688772}, "pyreqwest.cookie.Cookie": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}}, "df": 31, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}}, "df": 2}}}}}, ":": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.exceptions.NetworkError": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 2}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}}, "df": 1}, "d": {"docs": {"pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.exceptions.NetworkError": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1.4142135623730951}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 9, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.with_host": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 7, "d": {"docs": {"pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 17, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 17}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}}, "df": 3}, "s": {"docs": {"pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.types": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}}, "df": 6}}, "s": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.middleware": {"tf": 1}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}}, "df": 9, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 5, ":": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.multipart": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 6}}}}, "y": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 23}, "p": {"docs": {"pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMap.copy": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Mime.get_param": {"tf": 1}}, "df": 1}, "r": {"docs": {"pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}}, "df": 6}, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.response.BaseResponse.get_header": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 3, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.http.Mime": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 2.23606797749979}, "pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 2.449489742783178}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.multipart": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1.4142135623730951}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.4142135623730951}}, "df": 19, ":": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 2}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}}, "df": 5}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "f": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 33, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1.7320508075688772}, "pyreqwest.exceptions.RequestError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.DecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.TransportError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ReadError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.WriteError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.BuilderError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 30}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}}, "df": 1}}, "o": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 10}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}}, "df": 4, "n": {"docs": {"pyreqwest.http.Url.path": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}}, "df": 5, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.keys_len": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 3}}, "d": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}}, "df": 6}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}}, "df": 3}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}, "pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest": {"tf": 2}, "pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 17, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.types.JsonDumpsContext": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.split_parse": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 12}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 2}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 11}}}}}}, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.multipart.PartBuilder.file_name": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 57, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}}, "df": 3, "s": {"docs": {"pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 18}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.setdefault": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 3}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.client.types.SyncJsonLoadsContext": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 8}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.http.Mime.suffix": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.fragment": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}}, "df": 9}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 5, "s": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 2}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.multipart.FormBuilder.text": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.7320508075688772}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.subtype": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 2}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.status": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 3, "s": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}}, "df": 9}}, "s": {"docs": {"pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_string": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}}, "df": 23}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Mime.suffix": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.SyncClientBuilder": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1.4142135623730951}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 8, "d": {"docs": {"pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}}, "df": 6}}, "c": {"docs": {"pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.join": {"tf": 2}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 5, "s": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 4, "e": {"docs": {"pyreqwest.client.types.JsonDumpsContext.data": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.join": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 40, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_text": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_text": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}}, "df": 56}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 2}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path": {"tf": 1}}, "df": 11, "d": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 2}}, "d": {"docs": {"pyreqwest.cookie": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 3}, "d": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.copy": {"tf": 1}}, "df": 12, "s": {"docs": {"pyreqwest.request": {"tf": 1}, "pyreqwest.response": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}}, "df": 3}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.bytes": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}, "y": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 9, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 2.449489742783178}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 25, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.Request.copy": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.types.JsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.body_reader": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBodyReader": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest": {"tf": 2}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_status": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1.4142135623730951}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.SyncResponse": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 36, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}, "pyreqwest.response.ResponseBuilder": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1.7320508075688772}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1.7320508075688772}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1.4142135623730951}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.timeout": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.4142135623730951}}, "df": 58, "s": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.request": {"tf": 1}}, "df": 23}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 10}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RedirectError": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 46, "s": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}}, "df": 13}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.client": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}}, "df": 4, "s": {"docs": {"pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}}, "df": 4}, "d": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.with_host": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 3, "s": {"docs": {"pyreqwest.http.Url.join": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.pytest_plugin.Mock": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pyreqwest.request.RequestBody": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore": {"tf": 1.4142135623730951}, "pyreqwest.http.Url": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1.4142135623730951}, "pyreqwest.client.Runtime": {"tf": 1.4142135623730951}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isascii": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.response.BaseResponse.error_for_status": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {"pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.from_bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 25, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.headers": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.headers": {"tf": 1}, "pyreqwest": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.headers": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}}, "df": 16, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.http.HeaderMap.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"2": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 6}, "docs": {"pyreqwest": {"tf": 2.6457513110645907}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.pytest_plugin": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}}, "df": 28, "/": {"0": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}, "1": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1}}, "df": 7}, "2": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}}, "df": 3}, "3": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.https_only": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 6, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 5}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}}, "df": 8, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 2.449489742783178}, "pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 4, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.extensions": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_port": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.SyncClient.__exit__": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.getall": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.exceptions": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.exceptions.RedirectError": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Mime.subtype": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 21, "s": {"docs": {"pyreqwest.exceptions.CauseErrorDetails": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.SyncClient.__enter__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 9, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 3}, "d": {"docs": {"pyreqwest.exceptions.StatusError": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.multipart.FormBuilder": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_noop": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 2, "d": {"docs": {"pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 10}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.clear": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.ResponseBuilder.__init__": {"tf": 1.4142135623730951}}, "df": 16}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.has_host": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}}, "df": 5}}}, "[": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.essence_str": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.bytes.Bytes": {"tf": 2}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 2.449489742783178}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 2}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 2}, "pyreqwest.http.Url.path": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.domain": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.FormBuilder.file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_text": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.7320508075688772}, "pyreqwest.multipart.PartBuilder.from_file": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_header": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body_json": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 117, "s": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 2.23606797749979}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_json": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 42, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.Client.__aenter__": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.request.RequestBody.from_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build_sync": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.ResponseBuilder.build": {"tf": 1}}, "df": 4}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 2}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.islower": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 19}}}}, "n": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.StatusErrorDetails": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 30, "d": {"docs": {"pyreqwest": {"tf": 3.3166247903554}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClient.__exit__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.request": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.bytes": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 53}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 12, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}}, "df": 2}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "x": {"docs": {"pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.extend": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.cookie.CookieStore.clear": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.clear": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.reset_requests": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 27, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1.4142135623730951}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1.4142135623730951}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 19}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.HeaderMap.append": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.error_for_status": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.error_for_status": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}}, "df": 2}}, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.headers": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_header": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.basic_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.bearer_auth": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.add_root_certificate_der": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_root_certificate_pem": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pyreqwest.multipart.FormBuilder.part": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.CookieStore": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 2}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 20}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 9}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 20}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}}, "df": 15, "s": {"docs": {"pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.request.BaseRequestBuilder.multipart": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.bytes": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 14}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.types.JsonLoadsContext.extensions": {"tf": 1}, "pyreqwest.client.types.SyncJsonLoadsContext.extensions": {"tf": 1}, "pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.encode": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.ConsumedRequest.send": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.send": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 41, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Mime.essence_str": {"tf": 1}, "pyreqwest.multipart.FormBuilder.__init__": {"tf": 1}}, "df": 4}}}, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.with_path": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}}, "df": 15}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.ConsumedRequest": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.default_streamed_read_buffer_limit": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 15}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}}, "df": 15}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.client.Runtime.close": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.is_special": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.exceptions.DetailedPyreqwestError": {"tf": 1}, "pyreqwest.exceptions.RequestError": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.DecodeError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.TransportError": {"tf": 1}, "pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.ConnectTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ReadTimeoutError": {"tf": 1}, "pyreqwest.exceptions.WriteTimeoutError": {"tf": 1}, "pyreqwest.exceptions.PoolTimeoutError": {"tf": 1}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.exceptions.BuilderError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 2}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 2}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.pytest_plugin.client_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.create_mocker": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.reset_requests": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 57, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.CookieStore.insert": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}, "pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.http.Mime.parse": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}}, "df": 3, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.HeaderMap.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.exceptions.PyreqwestError.__init__": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.RequestTimeoutError": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.join": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"pyreqwest": {"tf": 1.7320508075688772}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_cookie_store": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.brotli": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.deflate": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.client.Runtime.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.secure": {"tf": 1}, "pyreqwest.cookie.Cookie.http_only": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.RedirectError": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 2}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.is_special": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.FormBuilder.sync_file": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_sync_file": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.request.StreamRequest": {"tf": 1}, "pyreqwest.request.SyncStreamRequest": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.RequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build_streamed": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1.4142135623730951}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 72, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.bytes": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 10, "s": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.extend": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.remove": {"tf": 1}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}}, "df": 43}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_max_idle_per_host": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}}, "df": 4, ":": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.resolve": {"tf": 1}}, "df": 1}}}}}, "v": {"6": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.request.RequestBuilder.build": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder.build": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 9, "e": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}}, "df": 6, "s": {"docs": {"pyreqwest.cookie.CookieStore.get_all_any": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_header_list_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.cookie.CookieStore": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.exceptions.Cause": {"tf": 1}, "pyreqwest.exceptions.JSONDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.make_relative": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.multipart.PartBuilder.mime": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}}, "df": 60, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}}, "df": 9}}}}}}}}, "r": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isascii": {"tf": 1}, "pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.referer": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.exceptions.StatusError": {"tf": 1}, "pyreqwest.exceptions.BodyDecodeError": {"tf": 1}, "pyreqwest.exceptions.RequestPanicError": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_body": {"tf": 1}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.headers": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.ResponseBuilder.headers": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 43, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.removeprefix": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.ClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.with_middleware": {"tf": 1}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.response.Response": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.bytes.Bytes.to_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.ClientBuilder": {"tf": 1}, "pyreqwest.client.SyncClientBuilder": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.cookie_provider": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.authority": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.request.Request.copy": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest": {"tf": 2}, "pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 10, "t": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}, "pyreqwest.bytes.Bytes.isalnum": {"tf": 1}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_stream": {"tf": 1}}, "df": 28, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.authority": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 4, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.connect_timeout": {"tf": 1}, "pyreqwest.cookie.Cookie.same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.expires_datetime": {"tf": 1}, "pyreqwest.cookie.Cookie.path": {"tf": 1}, "pyreqwest.cookie.Cookie.max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.domain": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.pop": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1}, "pyreqwest.http.HeaderMap.popall": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.index": {"tf": 1}, "pyreqwest.http.Mime.count": {"tf": 1}, "pyreqwest.http.Mime.suffix": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.body_stream": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.with_middleware": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.BaseResponse.content_type_mime": {"tf": 1}, "pyreqwest.response.BaseResponse.bytes": {"tf": 1}, "pyreqwest.response.BaseResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.text": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 31}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.client.ClientBuilder.__init__": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.with_http_only": {"tf": 1}, "pyreqwest.cookie.Cookie.with_secure": {"tf": 1}, "pyreqwest.cookie.Cookie.with_same_site": {"tf": 1}, "pyreqwest.cookie.Cookie.with_partitioned": {"tf": 1}, "pyreqwest.cookie.Cookie.with_max_age": {"tf": 1}, "pyreqwest.cookie.Cookie.with_path": {"tf": 1}, "pyreqwest.cookie.Cookie.with_domain": {"tf": 1}, "pyreqwest.cookie.Cookie.with_expires_datetime": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_bytes": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.ConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.StreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncConsumedRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.SyncStreamRequest.from_request_and_body": {"tf": 1}, "pyreqwest.request.Request.from_request_and_body": {"tf": 1}}, "df": 23, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyreqwest.client.BaseClientBuilder.interface": {"tf": 1}, "pyreqwest.exceptions.NetworkError": {"tf": 1.4142135623730951}, "pyreqwest.exceptions.ConnectError": {"tf": 1}, "pyreqwest.exceptions.ReadError": {"tf": 1}, "pyreqwest.exceptions.WriteError": {"tf": 1}}, "df": 5}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.middleware.Next": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read_chunk": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1.7320508075688772}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.assert_called": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.HeaderMapItemsView.isdisjoint": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView.isdisjoint": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tls_sni": {"tf": 1}, "pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_name": {"tf": 1}, "pyreqwest.cookie.Cookie.name": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains_any": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_any": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 15, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_spaces_after_header_name_in_responses": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_nodelay": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.Cookie.same_site": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 2}, "pyreqwest.request.RequestBody.get_stream": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.default_headers": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.timeout": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.cookie.CookieStore.matches": {"tf": 1}, "pyreqwest.cookie.CookieStore.contains": {"tf": 1}, "pyreqwest.cookie.CookieStore.get": {"tf": 1}, "pyreqwest.cookie.CookieStore.get_all_unexpired": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.origin_unicode": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.http.Url.has_authority": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.pytest_plugin.ClientMocker.strict": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.no_proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_only": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_prior_knowledge": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_adaptive_window": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_max_frame_size": {"tf": 1}, "pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.__init__": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.__init__": {"tf": 1.4142135623730951}, "pyreqwest.request.RequestBuilder": {"tf": 1}, "pyreqwest.request.SyncRequestBuilder": {"tf": 1}, "pyreqwest.request.RequestBody": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 19, "d": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.identity_pem": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 8}, "r": {"docs": {"pyreqwest.client.BaseClientBuilder.user_agent": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}, "pyreqwest.exceptions.ClientClosedError": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.SyncResponse.text": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_json": {"tf": 1}}, "df": 4}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.request.Request.extensions": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.extensions": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.Runtime.close": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_path_segment": {"tf": 1}, "pyreqwest.multipart.FormBuilder.percent_encode_attr_chars": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.basic_auth": {"tf": 1}, "pyreqwest.response.Response.body_reader": {"tf": 1}, "pyreqwest.response.SyncResponse.body_reader": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.tls_built_in_root_certs": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyreqwest.http": {"tf": 1}}, "df": 1}}}, "f": {"8": {"docs": {"pyreqwest.exceptions.JSONDecodeError": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"pyreqwest.response.ResponseBuilder.body_text": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.Client.request": {"tf": 1}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.Client.post": {"tf": 1}, "pyreqwest.client.Client.put": {"tf": 1}, "pyreqwest.client.Client.patch": {"tf": 1}, "pyreqwest.client.Client.delete": {"tf": 1}, "pyreqwest.client.Client.head": {"tf": 1}, "pyreqwest.client.SyncClient.request": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.client.SyncClient.post": {"tf": 1}, "pyreqwest.client.SyncClient.put": {"tf": 1}, "pyreqwest.client.SyncClient.patch": {"tf": 1}, "pyreqwest.client.SyncClient.delete": {"tf": 1}, "pyreqwest.client.SyncClient.head": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.cookie.CookieStore.matches": {"tf": 1.4142135623730951}, "pyreqwest.cookie.CookieStore.insert": {"tf": 1}, "pyreqwest.http.Url": {"tf": 1}, "pyreqwest.http.Url.__init__": {"tf": 1}, "pyreqwest.http.Url.parse": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 2.6457513110645907}, "pyreqwest.http.Url.make_relative": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_port": {"tf": 1}, "pyreqwest.http.Url.with_host": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.with_username": {"tf": 1}, "pyreqwest.http.Url.with_password": {"tf": 1}, "pyreqwest.http.Url.with_scheme": {"tf": 1}, "pyreqwest.http.Url.with_fragment": {"tf": 1}, "pyreqwest.http.Url.origin_unicode": {"tf": 1}, "pyreqwest.http.Url.password": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.username": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.port": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.has_host": {"tf": 1}, "pyreqwest.http.Url.fragment": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 2}, "pyreqwest.http.Url.path": {"tf": 1}, "pyreqwest.http.Url.scheme": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.origin_ascii": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1.4142135623730951}, "pyreqwest.proxy.ProxyBuilder.http": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.https": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.mock": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.request.Request.url": {"tf": 1}}, "df": 63, "s": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.base_url": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1.7320508075688772}, "pyreqwest.http.Url.has_authority": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}, "pyreqwest.http.Url.cannot_be_a_base": {"tf": 1}, "pyreqwest.http.Url.path": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.http.Url.domain": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.all": {"tf": 1}}, "df": 10}, ":": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.http.Url": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.form": {"tf": 1}}, "df": 3}}}}}}}}}, "v": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.max_redirects": {"tf": 1}, "pyreqwest.response.SyncResponseBodyReader.read": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "g": {"docs": {"pyreqwest.request.Request.method": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.BaseResponse.status": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.gzip": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.client.Client.get": {"tf": 1}, "pyreqwest.client.SyncClient.get": {"tf": 1}, "pyreqwest.http.Url.join": {"tf": 1}, "pyreqwest.http.HeaderMap.get": {"tf": 1}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1}, "pyreqwest.multipart.FormBuilder.boundary": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get_call_count": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_requests": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.get_call_count": {"tf": 1}, "pyreqwest.request.Request.headers": {"tf": 1}, "pyreqwest.request.Request.body": {"tf": 1}, "pyreqwest.request.Request.method": {"tf": 1.4142135623730951}, "pyreqwest.request.Request.url": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1.7320508075688772}}, "df": 17}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.pytest_plugin.Mock.match_request_with_response": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.Client": {"tf": 1}, "pyreqwest.client.SyncClient": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.runtime": {"tf": 1}, "pyreqwest.client.Runtime": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.with_ip_host": {"tf": 1}, "pyreqwest.http.Url.host_str": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.middleware.Next.run": {"tf": 1}, "pyreqwest.middleware.SyncNext.run": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.get": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.post": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.put": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.patch": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.delete": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.head": {"tf": 1}, "pyreqwest.pytest_plugin.ClientMocker.options": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_bytes": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_text": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_body_json": {"tf": 1}}, "df": 19}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"pyreqwest": {"tf": 2.23606797749979}, "pyreqwest.bytes.Bytes": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}, "pyreqwest.response.BaseResponse.headers": {"tf": 1}}, "df": 4, "r": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.exceptions.TransportError": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.http.Url.join": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.Url.has_authority": {"tf": 1.4142135623730951}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.max_connections": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.exceptions.RequestPanicError": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.proxy": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.add_crl_pem": {"tf": 1}, "pyreqwest.http.Url.with_path_segments": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.no_proxy": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.__init__": {"tf": 1}}, "df": 1}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}}, "df": 1, "s": {"docs": {"pyreqwest.client.BaseClientBuilder.http1_ignore_invalid_headers_in_responses": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest.client.Runtime": {"tf": 1}, "pyreqwest.types": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.cookie.Cookie": {"tf": 1}, "pyreqwest.http.Mime": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.bytes.Bytes.removesuffix": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.http.Url.path_segments": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.with_path": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_initial_stream_window_size": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_initial_connection_window_size": {"tf": 1}, "pyreqwest.http.Mime.type_": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.Url.scheme": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.bytes.Bytes.islower": {"tf": 1}, "pyreqwest.bytes.Bytes.isupper": {"tf": 1}, "pyreqwest.bytes.Bytes.lower": {"tf": 1}, "pyreqwest.bytes.Bytes.upper": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_lower_case_headers": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 6, "d": {"docs": {"pyreqwest.http.Mime.type_": {"tf": 1}, "pyreqwest.http.Mime.subtype": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.client.ClientBuilder.build": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.build": {"tf": 1}}, "df": 2, "s": {"docs": {"pyreqwest.client.ClientBuilder.json_handler": {"tf": 1}, "pyreqwest.client.SyncClientBuilder.json_handler": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.client.BaseClientBuilder.local_address": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_user_timeout": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyreqwest.request.Request.copy": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"pyreqwest.http.HeaderMap.update": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.min_tls_version": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.max_tls_version": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.with_version": {"tf": 1}, "pyreqwest.response.BaseResponse.version": {"tf": 1}, "pyreqwest.response.ResponseBuilder.version": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest.bytes.Bytes.isspace": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"pyreqwest.client.BaseClientBuilder.http09_responses": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_hostnames": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.request.Request.repr_full": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client": {"tf": 1}, "pyreqwest.multipart.PartBuilder": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.response.SyncResponse.json": {"tf": 1}, "pyreqwest.response.BaseResponse.extensions": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.cookie.Cookie.__init__": {"tf": 1}, "pyreqwest.cookie.Cookie.parse": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse": {"tf": 1}, "pyreqwest.cookie.Cookie.stripped": {"tf": 1}, "pyreqwest.cookie.Cookie.with_value": {"tf": 1}, "pyreqwest.cookie.Cookie.value": {"tf": 1}, "pyreqwest.cookie.Cookie.value_trimmed": {"tf": 1}, "pyreqwest.http.Url.is_valid": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.HeaderMap": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.dict_multi_value": {"tf": 1.4142135623730951}, "pyreqwest.http.Mime.get_param": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}, "pyreqwest.multipart.FormBuilder.text": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom": {"tf": 1}, "pyreqwest.proxy.ProxyBuilder.custom_http_auth": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.header": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header": {"tf": 1}, "pyreqwest.response.ResponseBuilder.header": {"tf": 1}}, "df": 27, "s": {"docs": {"pyreqwest.bytes.Bytes.isalnum": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.isalpha": {"tf": 1}, "pyreqwest.bytes.Bytes.isdigit": {"tf": 1}, "pyreqwest.bytes.Bytes.isspace": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http1_allow_obsolete_multiline_headers_in_responses": {"tf": 1}, "pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.values": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1}, "pyreqwest.http.HeaderMap.insert": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.append": {"tf": 1}, "pyreqwest.http.HeaderMapValuesView": {"tf": 1}, "pyreqwest.response.BaseResponse.get_header_all": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest.http.Url.is_valid": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.danger_accept_invalid_certs": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.response.SyncResponse": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {"pyreqwest": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.zstd": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyreqwest.bytes.Bytes": {"tf": 1.4142135623730951}, "pyreqwest.bytes.Bytes.__init__": {"tf": 1}, "pyreqwest.request.Request.copy": {"tf": 1}, "pyreqwest.request.RequestBody.copy_bytes": {"tf": 1}, "pyreqwest.response.ResponseBuilder.body_bytes": {"tf": 1}}, "df": 5}}}}, "q": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest": {"tf": 3.4641016151377544}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyreqwest": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.parse_with_params": {"tf": 1}, "pyreqwest.http.Url.with_query": {"tf": 1.4142135623730951}, "pyreqwest.http.Url.extend_query": {"tf": 1}, "pyreqwest.http.Url.with_query_string": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.Url.query_string": {"tf": 1}, "pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.pytest_plugin.Mock.match_query": {"tf": 1.4142135623730951}, "pyreqwest.pytest_plugin.Mock.match_query_param": {"tf": 1}, "pyreqwest.request.BaseRequestBuilder.query": {"tf": 1}}, "df": 11}}}}}, "k": {"docs": {"pyreqwest.http.HeaderMap.get": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.setdefault": {"tf": 1.7320508075688772}}, "df": 3, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 1, "n": {"docs": {"pyreqwest.client.BaseClientBuilder.read_timeout": {"tf": 1}, "pyreqwest.http.Url.port_or_known_default": {"tf": 1}, "pyreqwest.http.Url.authority": {"tf": 1}, "pyreqwest.multipart.PartBuilder.from_stream_with_length": {"tf": 1}}, "df": 4}, "s": {"docs": {"pyreqwest.http.Url.port_or_known_default": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyreqwest.client.BaseClientBuilder.pool_idle_timeout": {"tf": 1}, "pyreqwest.http.Mime.parameters": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyreqwest.client.BaseClientBuilder.http2_keep_alive_interval": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_timeout": {"tf": 1}, "pyreqwest.client.BaseClientBuilder.http2_keep_alive_while_idle": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.client.BaseClientBuilder.tcp_keepalive": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_interval": {"tf": 1.4142135623730951}, "pyreqwest.client.BaseClientBuilder.tcp_keepalive_retries": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"pyreqwest.http.Url.query_pairs": {"tf": 1}, "pyreqwest.http.HeaderMap.__init__": {"tf": 1}, "pyreqwest.http.HeaderMap.items": {"tf": 1}, "pyreqwest.http.HeaderMap.popitem": {"tf": 1}, "pyreqwest.http.HeaderMap.getall": {"tf": 1.4142135623730951}, "pyreqwest.http.HeaderMap.insert": {"tf": 1}, "pyreqwest.http.HeaderMap.append": {"tf": 2}, "pyreqwest.http.HeaderMapItemsView": {"tf": 1}}, "df": 8, "s": {"docs": {"pyreqwest.cookie.Cookie.parse_encoded": {"tf": 1}, "pyreqwest.cookie.Cookie.split_parse_encoded": {"tf": 1}, "pyreqwest.http.Url.query_dict_multi_value": {"tf": 1}, "pyreqwest.http.HeaderMap.keys": {"tf": 1}, "pyreqwest.http.HeaderMap.update": {"tf": 1.7320508075688772}, "pyreqwest.http.HeaderMap.keys_len": {"tf": 1}, "pyreqwest.http.HeaderMapKeysView": {"tf": 1}}, "df": 7}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyreqwest.http.Url.extend_query": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyreqwest.http.HeaderMap.popitem": {"tf": 1}}, "df": 1}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();